using System.Collections.Generic;

namespace Krista.FM.Common.Calculator
{
    public interface IPreprocessor
    {
        IFormulaRepository FormulaRepository { get; set; }

        /// <summary>
        /// Последовательность формул, гарантирующая правильный порядок их рассчета для соблюдения всех зависимостей.
        /// Рассчитывать от первого элемента к последнему.
        /// </summary>
        IList<IFormula> CalculationSequence { get; }

        /// <summary>
        /// Содержит неповторяющийся список констант, потребующихся при расчете всех формул из CalculationSequence.
        /// Заполняется при разборе зависимостей в AnalizeFormulas.
        /// </summary>
        IList<IConstant> RequiredConstants { get; }

        /// <summary>
        /// Определяет все взаимозависимости формул и констант.
        /// Формулы берутся из FormulaRepository на момент анализа.
        /// В процессе настраивает все списки зависимостей в затронутых формулах и константах.
        /// </summary>
        void AnalizeFormulas();

        /// <summary>
        /// Возвращает неповторяющийся список констант, потребующихся при расчете всех формул из указанного списка.
        /// Вызывать только после выполнения анализа зависимостей (AnalizeFormulas).
        /// </summary>
        ICollection<IConstant> GetRequiredConstants(IList<IFormula> formulas);

        /// <summary>
        /// Возвращает неповторяющуюся последовательность формул, значения которых затронет изменение указанной константы.
        /// Возвращенная последовательность отсортирована в правильном порядке для рассчета.
        /// Вызывать только после выполнения анализа зависимостей (AnalizeFormulas).
        /// </summary>
        IList<IFormula> GetDependentSequence(IConstant constant);

        /// <summary>
        /// Возвращает неповторяющуюся последовательность формул, значения которых затронет пересчет указанной, включая ее саму.
        /// Возвращенная последовательность отсортирована в правильном порядке для рассчета.
        /// Вызывать только после выполнения анализа зависимостей (AnalizeFormulas).
        /// </summary>
        IList<IFormula> GetDependentSequence(IFormula formula);

        /// <summary>
        /// Возвращает неповторяющуюся последовательность формул, от значений которых зависят указанные формулы, включая переданные.
        /// Возвращенная последовательность отсортирована в правильном порядке для рассчета.
        /// Вызывать только после выполнения анализа зависимостей (AnalizeFormulas).
        /// </summary>
        IList<IFormula> GetDependentSequence(IList<IFormula> formulas);

        /// <summary>
        /// Возвращает неповторяющуюся последовательность формул, от которых зависит указанная, включая ее саму.
        /// (!) Возвращенная последовательность отсортирована в правильном порядке для рассчета,
        /// но рассчитывать ее некорректно, так как она не включает всех зависимостей.
        /// (i) Для получения последовательности для пересчета формулы и всех от нее зависящих надо использовать GetRecalculateSequence.
        /// Вызывать только после выполнения анализа зависимостей (AnalizeFormulas).
        /// </summary>
        IList<IFormula> GetDependOnSequence(IFormula formula);

        /// <summary>
        /// Возвращает неповторяющуюся последовательность формул, которые потребуется пересчитать при необходимости пересчитать указанную.
        /// Включает как зависящие от указанной формулы, так и зависимые от нее, а также все необходимые зависимости всех участвующих формул.
        /// Возвращенная последовательность отсортирована в правильном порядке для рассчета.
        /// Вызывать только после выполнения анализа зависимостей (AnalizeFormulas).
        /// </summary>
        IList<IFormula> GetRecalculateSequence(IFormula formula);

        /// <summary>
        /// Возвращает неповторяющуюся последовательность формул, которые потребуется пересчитать при необходимости пересчитать указанные.
        /// Включает как зависящие от указанноых формулы, так и зависимые от них, а также все необходимые зависимости всех участвующих формул.
        /// Возвращенная последовательность отсортирована в правильном порядке для рассчета.
        /// Вызывать только после выполнения анализа зависимостей (AnalizeFormulas).
        /// </summary>
        IList<IFormula> GetRecalculateSequence(IEnumerable<IFormula> formulas);
    }
}
