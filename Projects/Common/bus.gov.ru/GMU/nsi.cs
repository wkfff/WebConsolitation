//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.8745
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bus.gov.ru.NSI.Item1
{
    using System.Collections.Generic;
    using System.IO;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body+)
    /// </para>
    /// </summary>
    public partial class consRegStat : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<bus.gov.ru.types.Item1.consRegStatType> bodyField;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator consRegStat(XElement xe) { return XTypedServices.ToXTypedElement<consRegStat>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static consRegStat() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/NSI/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body+)
        /// </para>
        /// </summary>
        public consRegStat() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body+)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (header, body+)
        /// </para>
        /// </summary>
        public IList<bus.gov.ru.types.Item1.consRegStatType> body {
            get {
                if ((this.bodyField == null)) {
                    this.bodyField = new XTypedList<bus.gov.ru.types.Item1.consRegStatType>(this, LinqToXsdTypeManager.Instance, XName.Get("body", "http://bus.gov.ru/NSI/1"));
                }
                return this.bodyField;
            }
            set {
                if ((value == null)) {
                    this.bodyField = null;
                }
                else {
                    if ((this.bodyField == null)) {
                        this.bodyField = XTypedList<bus.gov.ru.types.Item1.consRegStatType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("body", "http://bus.gov.ru/NSI/1"));
                    }
                    else {
                        XTypedServices.SetList<bus.gov.ru.types.Item1.consRegStatType>(this.bodyField, value);
                    }
                }
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("consRegStat", "http://bus.gov.ru/NSI/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static consRegStat Load(string xmlFile) {
            return XTypedServices.Load<consRegStat>(xmlFile);
        }
        
        public static consRegStat Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<consRegStat>(xmlFile);
        }
        
        public static consRegStat Parse(string xml) {
            return XTypedServices.Parse<consRegStat>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<consRegStat>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/NSI/1"), typeof(bus.gov.ru.types.Item1.consRegStatType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class confirmation : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator confirmation(XElement xe) { return XTypedServices.ToXTypedElement<confirmation>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static confirmation() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/NSI/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public confirmation() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/NSI/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/NSI/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("confirmation", "http://bus.gov.ru/NSI/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static confirmation Load(string xmlFile) {
            return XTypedServices.Load<confirmation>(xmlFile);
        }
        
        public static confirmation Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<confirmation>(xmlFile);
        }
        
        public static confirmation Parse(string xml) {
            return XTypedServices.Parse<confirmation>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<confirmation>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/NSI/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (refId?, result, positionResult*, violation*, refFileName?, refType)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : global::bus.gov.ru.types.Item1.packetResultType, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("refId", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("result", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("positionResult", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("violation", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("refFileName", "http://bus.gov.ru/NSI/1")), new NamedContentModelEntity(XName.Get("refType", "http://bus.gov.ru/NSI/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (refId?, result, positionResult*, violation*, refFileName?, refType)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Имя обработанного файла
            /// </para>
            /// <para>
            /// Occurrence: optional
            /// </para>
            /// <para>
            /// Regular expression: (refId?, result, positionResult*, violation*, refFileName?, refType)
            /// </para>
            /// </summary>
            public string refFileName {
                get {
                    XElement x = this.GetElement(XName.Get("refFileName", "http://bus.gov.ru/NSI/1"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElementWithValidation(XName.Get("refFileName", "http://bus.gov.ru/NSI/1"), value, "refFileName", refFileNameLocalType.TypeDefinition);
                }
            }
            
            /// <summary>
            /// <para>
            /// Тип обработанного пакета
            ///
            ///Допустимые значения:
            /// REF_KLADR1 - Справочник «КЛАДР» (Классификатор адресов России);
            /// REF_KLADR2 - Справочник «КЛАДР» (Классификатор адресов России);
            /// REF_AddressTypes - Справочник «Типы адресных объектов»;
            /// REF_KBK - Справочник кодов бюджетной классификации;
            /// REF_KBKGlava - Справочник кодов ведомств;
            /// REF_KBKKOSGU - Справочник «Коды КОСГУ»;
            /// REF_Budgets - Справочник «Бюджеты»;
            /// REF_OKATOtoOKTMO - Справочник «Таблица соответствия кодов ОКАТО кодам ОКТМО»;
            /// REF_TOFK - Справочник территориальных органов Федерального казначейства»;
            /// REF_OKATO - Общероссийский классификатор объектов административно-территориального деления;
            /// REF_OKVED - Общероссийский классификатор видов экономической деятельности;
            /// REF_OKEI - Общероссийский классификатор единиц измерения;
            /// REF_OKOGU - Общероссийский классификатор органов государственной власти и управления;
            /// REF_OKOPF - Общероссийский классификатор организационно-правовых форм;
            /// REF_OKTMO - Общероссийский классификатор территорий муниципальных образований;
            /// REF_OKFS - Общероссийский классификатор форм собственности;
            /// REF_OKER - Общероссийский классификатор экономических регионов;
            /// REF_UBPandNUBP - Реестр участников бюджетного процесса, а также юридических лиц, не являющихся участниками бюджетного процесса;
            /// REF_REF_Authorities - Справочник «Полномочия организаций»
            ///													
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (refId?, result, positionResult*, violation*, refFileName?, refType)
            /// </para>
            /// </summary>
            public string refType {
                get {
                    XElement x = this.GetElement(XName.Get("refType", "http://bus.gov.ru/NSI/1"));
                    return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
                }
                set {
                    this.SetElementWithValidation(XName.Get("refType", "http://bus.gov.ru/NSI/1"), value, "refType", global::bus.gov.ru.NSI.Item1.refPacketTypeType.TypeDefinition);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/NSI/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("refId", "http://bus.gov.ru/types/1"), typeof(string));
                localElementDictionary.Add(XName.Get("result", "http://bus.gov.ru/types/1"), typeof(string));
                localElementDictionary.Add(XName.Get("positionResult", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.positionResultType));
                localElementDictionary.Add(XName.Get("violation", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.violationType));
                localElementDictionary.Add(XName.Get("refFileName", "http://bus.gov.ru/NSI/1"), typeof(string));
                localElementDictionary.Add(XName.Get("refType", "http://bus.gov.ru/NSI/1"), typeof(string));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
            
            private class refFileNameLocalType {
                
                [DebuggerBrowsable(DebuggerBrowsableState.Never)]
                public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(6)), null, 0, 0, null, null, 1024, null, null, 1, null, 0, XmlSchemaWhiteSpace.Preserve));
                
                private refFileNameLocalType() {
                }
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Тип обработанного пакета
    /// </para>
    /// </summary>
    public sealed class refPacketTypeType {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        public static Xml.Schema.Linq.SimpleTypeValidator TypeDefinition = new Xml.Schema.Linq.AtomicSimpleTypeValidator(XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String), new Xml.Schema.Linq.RestrictionFacets(((Xml.Schema.Linq.RestrictionFlags)(16)), new object[] {
                        "REF_KLADR1",
                        "REF_KLADR2",
                        "REF_AddressTypes",
                        "REF_KBK",
                        "REF_KBKGlava",
                        "REF_KBKKOSGU",
                        "REF_Budgets",
                        "REF_OKATOtoOKTMO",
                        "REF_TOFK",
                        "REF_OKATO",
                        "REF_OKVED",
                        "REF_OKEI",
                        "REF_OKOGU",
                        "REF_OKOPF",
                        "REF_OKTMO",
                        "REF_OKFS",
                        "REF_OKER",
                        "REF_UBPandNUBP",
                        "REF_Authorities"}, 0, 0, null, null, 0, null, null, 0, null, 0, XmlSchemaWhiteSpace.Preserve));
        
        private refPacketTypeType() {
        }
    }
    
    public class LinqToXsdTypeManager : ILinqToXsdTypeManager {
        
        static Dictionary<XName, System.Type> typeDictionary = new Dictionary<XName, System.Type>();
        
        static Dictionary<XName, System.Type> elementDictionary = new Dictionary<XName, System.Type>();
        
        private static XmlSchemaSet schemaSet;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static LinqToXsdTypeManager typeManagerSingleton = new LinqToXsdTypeManager();
        
        static LinqToXsdTypeManager() {
            BuildTypeDictionary();
            BuildElementDictionary();
        }
        
        XmlSchemaSet ILinqToXsdTypeManager.Schemas {
            get {
                if ((schemaSet == null)) {
                    XmlSchemaSet tempSet = new XmlSchemaSet();
                    System.Threading.Interlocked.CompareExchange(ref schemaSet, tempSet, null);
                }
                return schemaSet;
            }
            set {
                schemaSet = value;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalTypeDictionary {
            get {
                return typeDictionary;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalElementDictionary {
            get {
                return elementDictionary;
            }
        }
        
        Dictionary<System.Type, System.Type> ILinqToXsdTypeManager.RootContentTypeMapping {
            get {
                return XTypedServices.EmptyTypeMappingDictionary;
            }
        }
        
        public static LinqToXsdTypeManager Instance {
            get {
                return typeManagerSingleton;
            }
        }
        
        private static void BuildTypeDictionary() {
            typeDictionary.Add(XName.Get("actionGrantType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.actionGrantType));
            typeDictionary.Add(XName.Get("activityResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.activityResultType));
            typeDictionary.Add(XName.Get("addressSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.addressSoftType));
            typeDictionary.Add(XName.Get("addressStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.addressStrongType));
            typeDictionary.Add(XName.Get("annualBalanceF0503121Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503121Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503121Type_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503121Type_2013));
            typeDictionary.Add(XName.Get("annualBalanceF0503127Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503127Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503127Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503127Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type_2013));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503137Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503137Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503721Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503721Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503721Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503721Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503721Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503721Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503730Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503730Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503730Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503730Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503730Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503730Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503737Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503737Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503737Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503737Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceBudgetGeneralDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceBudgetGeneralDataType));
            typeDictionary.Add(XName.Get("annualBalanceBudgetGeneralDataType2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceBudgetGeneralDataType2014));
            typeDictionary.Add(XName.Get("annualBalanceBudgetGeneralDataTypeCommon2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceBudgetGeneralDataTypeCommon2014));
            typeDictionary.Add(XName.Get("annualBalanceFounderDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderDataType));
            typeDictionary.Add(XName.Get("annualBalanceFounderDataType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderDataType_2015));
            typeDictionary.Add(XName.Get("annualBalanceFounderDataType_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderDataType_2014));
            typeDictionary.Add(XName.Get("annualBalanceFounderFinSupportDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderFinSupportDataType));
            typeDictionary.Add(XName.Get("annualBalanceFounderFinSupportDataType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderFinSupportDataType_2015));
            typeDictionary.Add(XName.Get("annualBalanceGeneralDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceGeneralDataType));
            typeDictionary.Add(XName.Get("annualBalanceGeneralDataType2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceGeneralDataType2014));
            typeDictionary.Add(XName.Get("annualBalanceGeneralDataTypeCommon2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceGeneralDataTypeCommon2014));
            typeDictionary.Add(XName.Get("branchChildType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchChildType));
            typeDictionary.Add(XName.Get("branchChildVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchChildVSRIType));
            typeDictionary.Add(XName.Get("branchParentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchParentType));
            typeDictionary.Add(XName.Get("branchParentVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchParentVSRIType));
            typeDictionary.Add(XName.Get("budgetaryCircumstancesType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.budgetaryCircumstancesType));
            typeDictionary.Add(XName.Get("changablePositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changablePositionType));
            typeDictionary.Add(XName.Get("changeIndexType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeIndexType));
            typeDictionary.Add(XName.Get("changeRangeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeRangeType));
            typeDictionary.Add(XName.Get("changeRequestClassifierType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeRequestClassifierType));
            typeDictionary.Add(XName.Get("changeRequestType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeRequestType));
            typeDictionary.Add(XName.Get("classifierType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.classifierType));
            typeDictionary.Add(XName.Get("consRegStatType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.consRegStatType));
            typeDictionary.Add(XName.Get("credentialsFkType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.credentialsFkType));
            typeDictionary.Add(XName.Get("credentialsGmuType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.credentialsGmuType));
            typeDictionary.Add(XName.Get("credentialsOosType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.credentialsOosType));
            typeDictionary.Add(XName.Get("diverseInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.diverseInfoType));
            typeDictionary.Add(XName.Get("documentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.documentType));
            typeDictionary.Add(XName.Get("paymentDetailsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.paymentDetailsType));
            typeDictionary.Add(XName.Get("paymentDetailsTargetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.paymentDetailsTargetType));
            typeDictionary.Add(XName.Get("egrulDifferenceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.egrulDifferenceType));
            typeDictionary.Add(XName.Get("employeeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.employeeType));
            typeDictionary.Add(XName.Get("fieldType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.fieldType));
            typeDictionary.Add(XName.Get("financialActivityPlanType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.financialActivityPlanType));
            typeDictionary.Add(XName.Get("financialActivityPlan2017Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.financialActivityPlan2017Type));
            typeDictionary.Add(XName.Get("founderAuthoritiesType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderAuthoritiesType));
            typeDictionary.Add(XName.Get("founderAuthoritiesVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderAuthoritiesVSRIType));
            typeDictionary.Add(XName.Get("fundsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.fundsType));
            typeDictionary.Add(XName.Get("headerType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.headerType));
            typeDictionary.Add(XName.Get("inspectionActivityType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.inspectionActivityType));
            typeDictionary.Add(XName.Get("institutionActivityType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionActivityType));
            typeDictionary.Add(XName.Get("institutionBudgetSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionBudgetSoftType));
            typeDictionary.Add(XName.Get("institutionBudgetStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionBudgetStrongType));
            typeDictionary.Add(XName.Get("institutionCashPaymentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionCashPaymentType));
            typeDictionary.Add(XName.Get("institutionClassifierType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionClassifierType));
            typeDictionary.Add(XName.Get("institutionEnactmentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionEnactmentType));
            typeDictionary.Add(XName.Get("institutionEnactmentVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionEnactmentVSRIType));
            typeDictionary.Add(XName.Get("institutionInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionInfoType));
            typeDictionary.Add(XName.Get("institutionPositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionPositionType));
            typeDictionary.Add(XName.Get("nsiBudgetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiBudgetType));
            typeDictionary.Add(XName.Get("nsiCustomerCategoryType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiCustomerCategoryType));
            typeDictionary.Add(XName.Get("nsiDepartments", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiDepartments));
            typeDictionary.Add(XName.Get("nsiFederalServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiFederalServiceType));
            typeDictionary.Add(XName.Get("nsiInstitutionTypeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiInstitutionTypeType));
            typeDictionary.Add(XName.Get("nsiKbkBudgetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiKbkBudgetType));
            typeDictionary.Add(XName.Get("nsiKladrType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiKladrType));
            typeDictionary.Add(XName.Get("nsiKosguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiKosguType));
            typeDictionary.Add(XName.Get("nsiOgsPositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOgsPositionType));
            typeDictionary.Add(XName.Get("nsiOgsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOgsType));
            typeDictionary.Add(XName.Get("nsiOkatoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkatoType));
            typeDictionary.Add(XName.Get("nsiOkeiType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkeiType));
            typeDictionary.Add(XName.Get("nsiOkerType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkerType));
            typeDictionary.Add(XName.Get("nsiOkfsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkfsType));
            typeDictionary.Add(XName.Get("nsiOkoguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkoguType));
            typeDictionary.Add(XName.Get("nsiOkopfType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkopfType));
            typeDictionary.Add(XName.Get("nsiOkpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkpoType));
            typeDictionary.Add(XName.Get("nsiOktmoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOktmoType));
            typeDictionary.Add(XName.Get("nsiOkvedType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkvedType));
            typeDictionary.Add(XName.Get("nsiPositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiPositionType));
            typeDictionary.Add(XName.Get("nsiPpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiPpoType));
            typeDictionary.Add(XName.Get("nsiServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiServiceType));
            typeDictionary.Add(XName.Get("nsiSubjectServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiSubjectServiceType));
            typeDictionary.Add(XName.Get("nsiTOFK", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiTOFK));
            typeDictionary.Add(XName.Get("packetResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.packetResultType));
            typeDictionary.Add(XName.Get("annualBalanceF0503121Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503121Type));
            typeDictionary.Add(XName.Get("packetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.packetType));
            typeDictionary.Add(XName.Get("personType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.personType));
            typeDictionary.Add(XName.Get("positionResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.positionResultType));
            typeDictionary.Add(XName.Get("positionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.positionType));
            typeDictionary.Add(XName.Get("ofcRegistrationInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.ofcRegistrationInfoType));
            typeDictionary.Add(XName.Get("ofcUserType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.ofcUserType));
            typeDictionary.Add(XName.Get("ofcOgsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.ofcOgsType));
            typeDictionary.Add(XName.Get("reportItemF0503121BaseType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121BaseType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503121BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503121TopLevelType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121TopLevelType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503121TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503127BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503127BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503127TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503127TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503130BaseType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130BaseType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503130BaseReferenceType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130BaseReferenceType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelReferenceType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelReferenceType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelReferenceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelReferenceType));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503137BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503137BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503137TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503137TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503721BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503721BaseType2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721BaseType2015));
            typeDictionary.Add(XName.Get("reportItemF0503721TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503721TopLevelType2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721TopLevelType2015));
            typeDictionary.Add(XName.Get("reportItemF0503730BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503730BaseType2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730BaseType2015));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelReferenceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelReferenceType));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelReferenceType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelReferenceType_2015));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelType_2015));
            typeDictionary.Add(XName.Get("reportItemF0503737BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503737BaseReturnExpenseType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737BaseReturnExpenseType_2015));
            typeDictionary.Add(XName.Get("reportItemF0503737TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503737TopLevelReturnExpenseType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737TopLevelReturnExpenseType_2015));
            typeDictionary.Add(XName.Get("regPublishedInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.regPublishedInfoType));
            typeDictionary.Add(XName.Get("refNsiBudgetSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiBudgetSoftType));
            typeDictionary.Add(XName.Get("refNsiBudgetStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiBudgetStrongType));
            typeDictionary.Add(XName.Get("refNsiCustomerCategoryType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiCustomerCategoryType));
            typeDictionary.Add(XName.Get("refNsiInstitutionTypeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiInstitutionTypeType));
            typeDictionary.Add(XName.Get("refNsiKbkBudgetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKbkBudgetType));
            typeDictionary.Add(XName.Get("refNsiKbkType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKbkType));
            typeDictionary.Add(XName.Get("refNsiKladrSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKladrSoftType));
            typeDictionary.Add(XName.Get("refNsiKladrStreetSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKladrStreetSoftType));
            typeDictionary.Add(XName.Get("refNsiKladrStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKladrStrongType));
            typeDictionary.Add(XName.Get("refNsiKosguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKosguType));
            typeDictionary.Add(XName.Get("refNsiOgsExtendedSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsExtendedSoftType));
            typeDictionary.Add(XName.Get("refNsiConsRegExtendedSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegExtendedSoftType));
            typeDictionary.Add(XName.Get("refNsiOgsExtendedStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsExtendedStrongType));
            typeDictionary.Add(XName.Get("refNsiConsRegExtendedStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegExtendedStrongType));
            typeDictionary.Add(XName.Get("refNsiOgsSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsSoftType));
            typeDictionary.Add(XName.Get("refNsiOgsSoftType1", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsSoftType1));
            typeDictionary.Add(XName.Get("refNsiConsRegSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegSoftType));
            typeDictionary.Add(XName.Get("refNsiOgsStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsStrongType));
            typeDictionary.Add(XName.Get("refNsiConsRegStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegStrongType));
            typeDictionary.Add(XName.Get("refNsiOkatoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkatoType));
            typeDictionary.Add(XName.Get("refNsiOkeiType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkeiType));
            typeDictionary.Add(XName.Get("refNsiOkfsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkfsType));
            typeDictionary.Add(XName.Get("refNsiOkoguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkoguType));
            typeDictionary.Add(XName.Get("refNsiOkopfType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkopfType));
            typeDictionary.Add(XName.Get("refNsiOkpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkpoType));
            typeDictionary.Add(XName.Get("refNsiOktmoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOktmoType));
            typeDictionary.Add(XName.Get("refNsiOkvedType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkvedType));
            typeDictionary.Add(XName.Get("refNsiPpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiPpoType));
            typeDictionary.Add(XName.Get("refNsiServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiServiceType));
            typeDictionary.Add(XName.Get("refNsiService640rType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiService640rType));
            typeDictionary.Add(XName.Get("refNsiTofkType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiTofkType));
            typeDictionary.Add(XName.Get("requisiteType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.requisiteType));
            typeDictionary.Add(XName.Get("serviceIndexType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.serviceIndexType));
            typeDictionary.Add(XName.Get("serviceIndex640rType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.serviceIndex640rType));
            typeDictionary.Add(XName.Get("stateTaskType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.stateTaskType));
            typeDictionary.Add(XName.Get("stateTask640rType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.stateTask640rType));
            typeDictionary.Add(XName.Get("orgListType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.orgListType));
            typeDictionary.Add(XName.Get("versionedPacketType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.versionedPacketType));
            typeDictionary.Add(XName.Get("versionedPacketType_ogs", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.versionedPacketType_ogs));
            typeDictionary.Add(XName.Get("violationType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.violationType));
            typeDictionary.Add(XName.Get("founderLinkTypeItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderLinkTypeItem));
            typeDictionary.Add(XName.Get("founderNetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderNetType));
            typeDictionary.Add(XName.Get("founderNetPrivilegePeriodType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderNetPrivilegePeriodType));
            typeDictionary.Add(XName.Get("checkInfoReportType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.checkInfoReportType));
            typeDictionary.Add(XName.Get("checkedOrgItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.checkedOrgItem));
            typeDictionary.Add(XName.Get("infoByPeriodsCheckResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.infoByPeriodsCheckResultType));
            typeDictionary.Add(XName.Get("PPO_OGSType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.PPO_OGSType));
            typeDictionary.Add(XName.Get("planPaymentIndexItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.planPaymentIndexItem));
            typeDictionary.Add(XName.Get("expensePaymentIndexItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.expensePaymentIndexItem));
            typeDictionary.Add(XName.Get("expenseSum", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.expenseSum));
            typeDictionary.Add(XName.Get("indexSum", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.indexSum));
        }
        
        private static void BuildElementDictionary() {
            elementDictionary.Add(XName.Get("consRegStat", "http://bus.gov.ru/NSI/1"), typeof(global::bus.gov.ru.NSI.Item1.consRegStat));
            elementDictionary.Add(XName.Get("confirmation", "http://bus.gov.ru/NSI/1"), typeof(global::bus.gov.ru.NSI.Item1.confirmation));
            elementDictionary.Add(XName.Get("reportGUID", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportGUID));
        }
        
        protected internal static void AddSchemas(XmlSchemaSet schemas) {
            schemas.Add(schemaSet);
        }
        
        public static System.Type GetRootType() {
            return elementDictionary[XName.Get("consRegStat", "http://bus.gov.ru/NSI/1")];
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public consRegStat consRegStat {  get {return rootObject as consRegStat; } }

    public confirmation confirmation {  get {return rootObject as confirmation; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(consRegStat root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(confirmation root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
    
    public partial class XRoot {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public global::bus.gov.ru.NSI.Item1.consRegStat consRegStat {  get {return rootObject as global::bus.gov.ru.NSI.Item1.consRegStat; } }

    public global::bus.gov.ru.NSI.Item1.confirmation confirmation {  get {return rootObject as global::bus.gov.ru.NSI.Item1.confirmation; } }

    public global::bus.gov.ru.types.Item1.reportGUID reportGUID {  get {return rootObject as global::bus.gov.ru.types.Item1.reportGUID; } }
        
        private XRoot() {
        }
        
        public XRoot(global::bus.gov.ru.NSI.Item1.consRegStat root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.NSI.Item1.confirmation root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.types.Item1.reportGUID root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRoot Load(string xmlFile) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(string xmlFile, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(XmlReader xmlReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}