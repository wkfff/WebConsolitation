<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
      AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
      LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
      ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABs
      CgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
      AwABEAMAAQEBAAEgBgABEFIAQP/AAED/gAABdQGIAZAB/wF1AX0BgQH/AWUCdQH/AVUCZQH/AUUCVQH/
      ATUBPQFFAf8BJQEtATUB/wEVAiUB/wIVASUB/wIVASUB/wIVASUB/wIVASUB/wIVASUB/wIVASUB/wIV
      ASUB/wQAAXUBiAGQAf8BdQF9AYEB/wFlAnUB/wFVAmUB/wFFAlUB/wFVAmUB/wGBAYgBZQH/AXUBVQE1
      Af8BoAF1AWUB/wIVASUB/wIVASUB/wIVASUB/wIVASUB/wIVASUB/wIVASUF/4AAAXUBiAGQAf8BoAHg
      AfAB/wF1AdAB8AH/AVUBuAHgAf8BNQGwAeAB/wE1AagB4AH/ASUBoAHQAf8BJQGYAcAB/wElAZABwAH/
      ASUBgQGwAf8BJQGBAbAB/wEVAYEBsAH/ASUBfQGgAf8BJQF1AZAB/wEVAiUB/wQAAXUBiAGQAf8BoAHg
      AfAB/wF1AdAB8AH/AVUBuAHgAf8B4AHAAbAB/wGwAX0BRQH/AWUBdQElAf8BVQFtATUB/wGBAV0BNQH/
      AaABXQFFAf8BwAGoAaAB/wEVAYEBsAH/ASUBfQGgAf8BJQF1AZAB/wEVAiUF/4AAAYEBiAGQAf8BsAHo
      AfAB/wGQAegC/wGBAeAC/wF1AdgC/wF1AdAB8AH/AWUByAHwAf8BVQHAAfAB/wFFAbgB8AH/ATUBqAHw
      Af8BNQGoAeAB/wElAZgB4AH/ARUBkAHQAf8BJQF9AaAB/wElAS0BNQH/BAABgQGIAZAB/wGwAegB8AH/
      AZAB6AL/AeAB0AHAAf8B4AF9AVUB/wHQAYEBVQH/AWUBiAE1Af8BJQGIASUB/wFlAXUBNQH/AbABbQFF
      Af8BgQFVATUB/wHQAcgBwAH/ARUBkAHQAf8BJQF9AaAB/wElAS0BNQX/gAABgQGQAaAB/wGwAegB8AH/
      AaAB6AL/AZAB6AL/AYEB4AL/AXUB2AL/AXUB0AHwAf8BZQHIAfAB/wFVAcAB8AH/AUUBuAHwAf8BNQGo
      AfAB/wE1AaAB4AH/ASUBmAHgAf8BFQGBAbAB/wE1AT0BRQH/BAABgQGQAaAB/wGwAegB8AH/AaAB6AL/
      AdABiAF1Af8B4AF9AWUB/wGgAYEBVQH/AVUBmAE1Af8BZQGgASUB/wGgAYEBRQH/AYEBbQFFAf8BRQFt
      ATUB/wF1AZABZQH/ASUBmAHgAf8BFQGBAbAB/wE1AT0BRQX/gAABgQGQAaAB/wGwAfAC/wGwAfAC/wGg
      AegC/wGQAeAC/wGBAeAC/wF1AdgC/wF1AdAB8AH/AWUByAHwAf8BVQHAAfAB/wFFAbAB8AH/ATUBqAHw
      Af8BJQGgAeAB/wEVAYEBsAH/AkUBVQH/BAABgQGQAaAB/wGwAfAC/wGwAfAC/wGwAWUBRQH/AaABiAFl
      Af8BRQGQAUUB/wFlAaABRQH/AdABmAFVAf8B4AGBAVUB/wFlAYEBRQH/ASUBiAElAf8BNQF1ASUB/wEl
      AaAB4AH/ARUBgQGwAf8CRQFVBf+AAAGBAZgBoAH/AcAB8AL/AbAC8AH/AaAB8AL/AaAB6AL/AZAB4AL/
      AYEB4AL/AXUB2AL/AWUB0AHwAf8BZQHIAfAB/wFVAbgB8AH/AUUBsAHwAf8BNQGoAeAB/wEVAYgBwAH/
      AlUBZQH/BAABgQGYAaAB/wHAAfAC/wGwAvAB/wGgAZABdQH/AVUBmAFVAf8BNQG4AVUB/wGBAbABdQH/
      AeABkAF1Af8B8AGQAWUB/wGQAZgBNQH/ATUBmAEVAf8BZQGYAVUB/wE1AagB4AH/ARUBiAHAAf8CVQFl
      Bf+AAAGBAZgBoAH/AcAB8AL/AbAB8AL/AbAB8AL/AaAB6AL/AZAB6AL/AZAB4AL/AYEB4AL/AXUB2AL/
      AWUB0AHwAf8BZQHIAfAB/wFVAbgB8AH/ATUBqAHgAf8BFQGQAcAB/wFVAWUBdQH/BAABgQGYAaAB/wHA
      AfAC/wGwAfAC/wHAAdABwAH/AVUBsAFlAf8BdQHgAZAB/wGgAeABoAH/AbABwAGQAf8B0AGYAXUB/wHQ
      AZABRQH/AVUBkAElAf8BwAHQAbAB/wE1AagB4AH/ARUBkAHAAf8BVQFlAXUF/4AAAZACoAH/AcAB8AL/
      AbAB8AL/AbAB8AL/AbAC8AH/AaAB8AL/AZAB6AL/AZAB4AL/AYEB4AL/AXUB0AL/AWUB0AHwAf8BVQHA
      AfAB/wFVAbgB8AH/ASUBmAHQAf8BZQF1AYEB/wQAAZACoAH/AcAB8AL/AbAB8AL/AbAB8AL/AbAB0AGw
      Af8BgQHIAZAB/wHAAeABwAH/AbAB4AGwAf8BgQGoAWUB/wGQAXUBNQH/AcABsAGBAf8BVQHAAfAB/wFV
      AbgB8AH/ASUBmAHQAf8BZQF1AYEF/4AAAZABoAGwAf8BwAHwAv8BwAHwAv8BwAHwAv8BwAHwAv8BsAHw
      Av8BsAHwAv8BoAHoAv8BkAHoAv8BkAHgAv8BgQHYAv8BdQHQAv8BdQHIAfAB/wFlAcAB8AH/AWUBdQGB
      Af8EAAGQAaABsAH/AcAB8AL/AcAB8AL/AcAB8AL/AcAB8AL/AdAB4AHQAf8BoAG4AZAB/wFVAZgBZQH/
      AWUBsAF1Af8B0AHIAbAB/wGBAdgC/wF1AdAC/wF1AcgB8AH/AWUBwAHwAf8BZQF1AYEF/4AAAZABoAGw
      Af8BkAGgAbAB/wGQAaABsAH/AZABoAGwAf8BkAGgAbAB/wGQAaABsAH/AZACoAH/AZABmAGgAf8BgQGY
      AaAB/wGBAZgBoAH/AYEBmAGgAf8BgQGYAaAB/wGBAZgBoAH/AYEBmAGgAf8BOwI6AWAEAAGQAaABsAH/
      AZABoAGwAf8BkAGgAbAB/wGQAaABsAH/AZABoAGwAf8BkAGgAbAB/wGQAqAB/wGQAZgBoAH/AYEBmAGg
      Af8BgQGYAaAB/wGBAZgBoAH/AYEBmAGgAf8BgQGYAaAB/wGBAZgBoAH/AXQBhwGPBf+AAAGQAagBsAH/
      AbAB6AHwAf8BsAHwAv8BsAHwAv8BsALwAf8BkAHgAfAB/wGQAaABsAH/AUgCRAGAIAABkAGoAbAB/wGw
      AegB8AH/AbAB8AL/AbAB8AL/AbAC8AH/AZAB4AHwAf8BkAGgAbAB/wGBAacBryH/gAADIgEwAZABqAGw
      Af8BkAGoAbAB/wGQAagBsAH/AZABqAGwAf8BkAGoAbAB/wMrAUAkAAF0AbQBzwH/AZABqAGwAf8BkAGo
      AbAB/wGQAagBsAH/AZABqAGwAf8BkAGoAbAB/wGPAacBryX/wABA/8AAQP+AAAFCAU0BPgcAAT4DAAEo
      AwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAC/wYAAv8HAAEBBwABAQcAAQEHAAEBBwABAQcAAQEHAAEB
      BwABAQcAAQEHAAEBBwAB/wYAAQEB/wYAAv8GAAL/BgAL
    </value>
  </data>
</root>