<?xml version="1.0" encoding="Windows-1251"?>
<root>

  <query id="FO_0021_0005_Saratov_date">
    <![CDATA[
-- FO_0021_0005_Saratov_date
with
    member [Measures].[ДанныеНа]
    as '[Период__Период].[Период__Период].CurrentMember.UniqueName'
    set [NonEmptySet]
    as 'Tail
        (
            Filter
            (
                Descendants
                (
                    [Период__Период].[Период__Период].[Данные всех периодов],
                    [Период__Период].[Период__Период].[Квартал],
                    SELF
                ),
                not IsEmpty
                (
                    (
                        [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].[Все показатели]
                    )
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Остатки на начало года"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные квартала"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные полугодия"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные месяца"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные года"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Заключительные обороты"
                )
            ),
            1
        )'
select
    { [Measures].[ДанныеНа] } on columns,
    { [NonEmptySet] } on rows
from [ФО_ФПКУ_Показатели]
]]>
  </query>

  <query id="FO_0021_0005_Saratov_chart">
    <![CDATA[
-- FO_0021_0005_Saratov_chart
with       
    set [Список МО]       
    as 'Filter       
        (
            Descendants       
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Все районы],
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Уровень 03],
                SELF       
            ),
            not 
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember is [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Parent.DataMember 
            ) and 
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "МР" or [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "ГО" 
            ) 
        )' 
    member [Районы__Сопоставимый].[Районы__Сопоставимый].[UniqName]
    as '[Период__Период].[Период__Период].CurrentMember.UniqueName'
    set [Периоды] 
    as 'Filter 
        (
            Generate 
            (
                {
                    <%period_set%>
                },
                {
                  [Период__Период].[Период__Период].CurrentMember
                } + Descendants 
                (
                    [Период__Период].[Период__Период].CurrentMember,
                    [Период__Период].[Период__Период].[Квартал],
                    SELF 
                ) 
            ),
            (
                [Период__Период].[Период__Период].CurrentMember.Name <> "Остатки на начало года"
            ) and 
            (
                [Период__Период].[Период__Период].CurrentMember.Name <> "Данные квартала"
            ) and 
            (
                [Период__Период].[Период__Период].CurrentMember.Name <> "Данные полугодия"
            ) and 
            (
                [Период__Период].[Период__Период].CurrentMember.Name <> "Данные месяца"
            ) and 
            (
                [Период__Период].[Период__Период].CurrentMember.Name <> "Данные года"
            ) and 
            (
                [Период__Период].[Период__Период].CurrentMember.Name <> "Заключительные обороты"
            )  and not IsEmpty 
            (
               [Measures].[<%selected_measure%>]
            )  and 
            (
               [Период__Период].[Период__Период].CurrentMember.Level is [Период__Период].[Период__Период].[Квартал]
            )
        )'
select
    { {[Районы__Сопоставимый].[Районы__Сопоставимый].[UniqName]} + [Список МО] } on columns,
    { [Периоды] } on rows     
from [ФО_ФПКУ_Показатели]       
where
    (
        [Measures].[<%selected_measure%>],
        <%selected_indicator%>
    )          
  ]]>
</query>

  <query id="FO_0021_0005_Saratov_indicatorList">
    <![CDATA[
-- FO_0021_0005_Saratov_indicatorList
with 
    set [Показатели] 
    as 'Filter 
        (
            Descendants 
            (
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].[Все показатели],
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].[Показатели],
                SELF 
            ),
            (
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Name <> "Несопоставленные данные" 
            ) and 
            (
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Name <> "Итоговая оценка" 
            ) and 
            (
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Name <> "Ранг" 
            ) and 
            (
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Name <> "Средняя оценка" 
            ) and
            (
                 [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Name <> "Группа МО"
            ) 
        )'  
    set [Список общих показателей] 
    as 'Filter 
        (
            {
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].[Все показатели].[Итоговая оценка],
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].[Все показатели].[Ранг],
                [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].[Все показатели].[Средняя оценка] 
            },
            Measures.[Выбран удельный вес] = true 
        )'  
    member [Measures].[Имя] 
    as '[Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Properties("Наименование")' 
    member [Measures].[Уникальное имя] 
    as '[Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.UniqueName' 
    member [Measures].[Уровень] 
    as '0' 
    member [Measures].[Полное имя] 
    as '[Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Properties("Наименование")' 
    member [Measures].[Краткое имя] 
    as '[Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Name' 
    member [Measures].[Тип] 
    as '[Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].CurrentMember.Name'  
    member Measures.[Выбран удельный вес] 
    as '"<%selected_measure%>" = "Взвешенное значение"'  
    set [Список районов] 
    as 'Filter 
        (
            Descendants 
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Все районы],
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Уровень 03],
                SELF 
            ),
            not 
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember is  [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Parent.DataMember 
            ) and 
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "МР" or  [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "ГО" 
            ) 
        )'  
    member [Районы__Сопоставимый].[Районы__Сопоставимый].[Аггрегироавнные районы] 
    as 'Aggregate({[Список районов]})' 
    member [Период__Период].[Период__Период].[Аггрегированные периоды]
    as 'Aggregate
        (
            {
                <%period_set%>
            }
        )' 
select
    {
        [Measures].[Имя],
        [Measures].[Уникальное имя],
        [Measures].[Уровень],
        [Measures].[Полное имя],
        [Measures].[Краткое имя],
        [Measures].[Тип] 
    } on columns,
    {
        Filter 
        (
            {
                [Показатели] + [Список общих показателей]
            },
            not 
            (
                IsEmpty 
                (
                    (
                        [Районы__Сопоставимый].[Районы__Сопоставимый].[Аггрегироавнные районы],
                        [Период__Период].[Период__Период].[Аггрегированные периоды]
                    ) 
                ) 
            ) 
        ) 
    } on rows 
from  [ФО_ФПКУ_Показатели]  
  ]]>
  </query>

  <query id="FO_0021_0005_Saratov_nonEmptyPeriodList2">
    <![CDATA[
-- FO_0021_0005_Saratov_nonEmptyPeriodList2
with
    set [Непустые периоды]
    as '  Filter
        (
            Descendants
            (
                [Период].[Период].[Данные всех периодов],
                [Период].[Период].[Квартал],
                SELF
            ),
            not IsEmpty
            (
                (
                    [Показатели].[ФПКУ_Сопоставимый].[Все показатели]
                )
            ) and
            (
                [Период].[Период].CurrentMember.Name <> "Остатки на начало года"
            ) and
            (
                [Период].[Период].CurrentMember.Name <> "Данные квартала"
            ) and
            (
                [Период].[Период].CurrentMember.Name <> "Данные полугодия"
            ) and
            (
                [Период].[Период].CurrentMember.Name <> "Данные месяца"
            ) and
            (
                [Период].[Период].CurrentMember.Name <> "Данные года"
            ) and
            (
                [Период].[Период].CurrentMember.Name <> "Заключительные обороты"
            )
        ) '
    member [Measures].[Уникальное имя]
    as '[Период].[Период].CurrentMember.UniqueName'
    member [Measures].[Уровень]
    as '0'
    member [Measures].[Имя]
    as 'IIF
        (
            [Период].[Период].CurrentMember.Name = "Квартал 1",
            "1 квартал " + [Период].[Период].CurrentMember.Parent.Parent.Name + " года",
            IIF
            (
                [Период].[Период].CurrentMember.Name = "Квартал 2",
                "2 квартал " + [Период].[Период].CurrentMember.Parent.Parent.Name + " года",
                IIF
                (
                    [Период].[Период].CurrentMember.Name = "Квартал 3",
                    "3 квартал " + [Период].[Период].CurrentMember.Parent.Parent.Name + " года",
                    "4 квартал " + [Период].[Период].CurrentMember.Parent.Parent.Name + " года"
                )
            )
        )'
select
    {
        [Measures].[Имя],
        [Measures].[Уникальное имя],
        [Measures].[Уровень]
    } on columns,
    { [Непустые периоды] } on rows
from [ФО_ФПКУ_Показатели]
  ]]>
  </query>

  <query id="FO_0021_0005_Saratov_nonEmptyPeriodList">
    <![CDATA[
-- FO_0021_0005_Saratov_nonEmptyPeriodList
with
    set [Непустые периоды]
    as 'Generate
        (
            Filter
            (
                Descendants
                (
                    [Период__Период].[Период__Период].[Данные всех периодов],
                    [Период__Период].[Период__Период].[Квартал],
                    SELF
                ),
                not IsEmpty
                (
                    (
                        [Показатели__ФПКУ_Сопоставимый].[Показатели__ФПКУ_Сопоставимый].[Все показатели]
                    )
                ) and
                (
                    [Период__Период].[Период__Период].CurrentMember.Name <> "Остатки на начало года"
                ) and
                (
                    [Период__Период].[Период__Период].CurrentMember.Name <> "Данные квартала"
                ) and
                (
                    [Период__Период].[Период__Период].CurrentMember.Name <> "Данные полугодия"
                ) and
                (
                    [Период__Период].[Период__Период].CurrentMember.Name <> "Данные месяца"
                ) and
                (
                    [Период__Период].[Период__Период].CurrentMember.Name <> "Данные года"
                ) and
                (
                    [Период__Период].[Период__Период].CurrentMember.Name <> "Заключительные обороты"
                )
            ),
            {
                [Период__Период].[Период__Период].CurrentMember.Parent.Parent
            } +
            {
                [Период__Период].[Период__Период].CurrentMember
            }
        ) '
    member [Measures].[Имя]
    as ' IIF
        (
            [Период__Период].[Период__Период].CurrentMember.Level is [Период__Период].[Период__Период].[Квартал],
            [Период__Период].[Период__Период].CurrentMember.Name,
            [Период__Период].[Период__Период].CurrentMember.Name + " год"
        ) '
    member [Measures].[Уникальное имя]
    as '[Период__Период].[Период__Период].CurrentMember.UniqueName'
    member [Measures].[Уровень]
    as 'IIF
        (
            [Период__Период].[Период__Период].CurrentMember.Level is [Период__Период].[Период__Период].[Квартал],
            1,
            0
        )'
select
    {
        [Measures].[Имя],
        [Measures].[Уникальное имя],
        [Measures].[Уровень]
    } on columns,
    { [Непустые периоды] } on rows
from [ФО_ФПКУ_Показатели]
  ]]>
  </query>
  
</root>