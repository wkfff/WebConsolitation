<?xml version="1.0" encoding="Windows-1251"?>
<root>

  <query id="ORG_0003_0009_list_of_dates">
    <![CDATA[ -- name: ORG_0003_0009_list_of_dates
with
    set [Субъекты РФ]
    as '
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Приволжский федеральный округ].[Кировская область].[Кировская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Архангельская область].[Архангельская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Вологодская область].[Вологодская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Новгородская область].[Новгородская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Республика Карелия].[Республика Карелия],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Тверская область].[Тверская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Костромская область].[Костромская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Ленинградская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Ярославская область].[Ярославская область]
        }'
    set [Территории]
    as 'Generate
        (
            [Субъекты РФ],
            {
                [Территории].[РФ].CurrentMember
            } + Filter
            (
                Descendants
                (
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].[ГП СП ВТГФЗ],
                    SELF_AND_BEFORE
                ),
                not
                (
                    [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember
                ) and ([Measures].[Средняя цена] > 0)
            )
        )'
select
    {[Территории]} on columns,
    {
        filter
        (
            [Период].[День].[День].members,
            [Measures].[Средняя цена] > 0
        )
    } on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        [Организации].[Товары и услуги].[Все товары и услуги].[Продовольственные товары]
    )
    ]]>
  </query>

  <query id ="ORG_0003_0009_list_of_regions">
    <![CDATA[ -- name:ORG_0003_0009_list_of_regions
with     
    set [Субъекты РФ]     
    as '    
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Приволжский федеральный округ].[Кировская область].[Кировская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Архангельская область].[Архангельская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Вологодская область].[Вологодская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Новгородская область].[Новгородская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Республика Карелия].[Республика Карелия],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Тверская область].[Тверская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Костромская область].[Костромская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Ленинградская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Ярославская область].[Ярославская область] 
        }'     
    set [Территории]    
    as 'Generate   
        (
            [Субъекты РФ],
            {
                [Территории].[РФ].CurrentMember   
            } + Filter
            (
                Descendants 
                (
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].[ГП СП ВТГФЗ],
                    SELF_AND_BEFORE
                ),
                not 
                (
                    [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember
                ) and ([Measures].[Средняя цена] > 0)
            ) 
        )'    
    member [Measures].[UniqName]  
    as '[Территории].[РФ].CurrentMember.UniqueName'  
    member [Measures].[RegionType]
    as '[Территории].[РФ].CurrentMember.Properties("Тип территории")'
select
    {[Measures].[UniqName],[Measures].[RegionType]} on columns,
    {[Территории]} on rows  
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        [Организации].[Товары и услуги].[Все товары и услуги].[Продовольственные товары]
    )
    ]]>
  </query>

  <query id = "ORG_0003_0009_grid">
    <![CDATA[ -- ORG_0003_0009_grid
with
    member [Measures].[Единица измерения]
    as '[Организации].[Товары и услуги].CurrentMember.Properties("Единица измерения")'
    member [Measures].[Имя]
    as '[Организации].[Товары и услуги].CurrentMember.UniqueName'
    member [Период].[День].[Выбранная дата]
    as '<%selected_date%>'
    member [Период].[День].[Предыдущая дата]
    as '<%previous_date%>'
    member [Период].[День].[Новогодняя дата]
    as '<%year_date%>'
select
    {
        {
            {
                [Measures].[Единица измерения]
            }
            *
            {
                [Период].[День].[Данные всех периодов]
            }
        } +
        {
            { [Measures].[Имя] }
            *
            {
                [Период].[День].[Данные всех периодов]
            }
        } +
        {
            { [Measures].[Средняя цена] }
            *
            {
                [Период].[День].[Новогодняя дата],
                [Период].[День].[Предыдущая дата],
                [Период].[День].[Выбранная дата]
            }
        }
    } on columns,
    {
        Filter
        (
            Descendants
            (
                [Организации].[Товары и услуги].[Все товары и услуги].[Продовольственные товары],
                [Организации].[Товары и услуги].[Уровень 3]
            ),
            [Measures].[Средняя цена] > 0
        )
    } on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        <%selected_region%>
    )
    ]]>
  </query>

  <query id = "ORG_0003_0009_chart_by_time">
    <![CDATA[ -- ORG_0003_0009_chart_by_time
select
    Tail
    (
        Filter
        (
            { <%selected_date%> : <%first_date%> },
            [Measures].[Средняя цена] > 0
        ),
        52
    ) on columns,
    {[Measures].[Средняя цена]} on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        <%selected_region%>,
        <%selected_food%>
    )
    ]]>
  </query>

  <query id = "ORG_0003_0009_chart_by_time_names">
    <![CDATA[ -- ORG_0003_0009_chart_by_time_names
with
member [Measures].[День]
as '[Период].[День].CurrentMember.UniqueName'
select
    Tail
    (
        Filter
        (
            { <%selected_date%> : <%first_date%> },
            [Measures].[Средняя цена] > 0
        ),
        52
    ) on columns,
    {[Measures].[День]} on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        <%selected_region%>,
        <%selected_food%>
    )

    ]]>
  </query>

  <query id = "ORG_0003_0009_chart_by_previous_month">
    <![CDATA[ -- ORG_0003_0009_chart_by_previous_month
with 
    member Measures.[Цена (без учета прироста)]
    as 'IIF
        (
            Measures.[Снижение цены] < 0,
            (
                [Measures].[Средняя цена],
                <%previous_date%>
            ) - Measures.[Снижение цены ],
            (
                [Measures].[Средняя цена],
                <%previous_date%>
            )
        )'
    member Measures.[Цена на предыдущий период]
    as '
        (
            [Measures].[Средняя цена],
            <%previous_date%>
        )'
    member Measures.[Цена на текущий период] 
    as ' 
        (
            [Measures].[Средняя цена],
            <%selected_date%>
        )' 
    member Measures.[Отклонение цены] 
    as 'IIF 
        (
            IsEmpty 
            (
                Measures.[Цена на текущий период] 
            ),
            null,
            Measures.[Цена на текущий период] - Measures.[Цена на предыдущий период] 
        )' 
    member Measures.[Прирост цены, входящий в состав текущей цены] 
    as 'IIF 
        (
            (Measures.[Отклонение цены]) > 0,
            Measures.[Отклонение цены],
            null 
        )' 
    member Measures.[Снижение цены] 
    as 'IIF 
        (
            (Measures.[Отклонение цены]) < 0,
            Measures.[Отклонение цены],
            null
        )' 
    member Measures.[Снижение цены ]
    as 'IIF
        (
            (Measures.[Отклонение цены]) < 0,
            -Measures.[Отклонение цены],
            null
        )'
select
    Filter ({
        Measures.[Цена (без учета прироста)],
        Measures.[Прирост цены, входящий в состав текущей цены],
        Measures.[Снижение цены ]
    }, Measures.[Цена (без учета прироста)] > 0) on columns,
    {<%all_regions%>} on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        <%selected_food%>
    )
    ]]>
  </query>

  <query id = "ORG_0003_0009_chart_by_start_year">
    <![CDATA[ -- ORG_0003_0009_chart_by_start_year
with 
    member Measures.[Цена (без учета прироста)]
    as 'IIF
        (
            Measures.[Снижение цены] < 0,
            (
                [Measures].[Средняя цена],
                <%year_date%>
            ) - Measures.[Снижение цены ],
            (
                [Measures].[Средняя цена],
                <%year_date%>
            )
        )'
    member Measures.[Цена на начало года]
    as '
        (
            [Measures].[Средняя цена],
            <%year_date%>
        )'
    member Measures.[Цена на текущий период] 
    as ' 
        (
            [Measures].[Средняя цена],
            <%selected_date%>
        )' 
    member Measures.[Отклонение цены] 
    as 'IIF 
        (
            IsEmpty 
            (
                Measures.[Цена на текущий период] 
            ),
            null,
            Measures.[Цена на текущий период] - Measures.[Цена на начало года] 
        )' 
    member Measures.[Прирост цены, входящий в состав текущей цены] 
    as 'IIF 
        (
            (Measures.[Отклонение цены]) > 0,
            Measures.[Отклонение цены],
            null 
        )' 
    member Measures.[Снижение цены] 
    as 'IIF 
        (
            (Measures.[Отклонение цены]) < 0,
            Measures.[Отклонение цены],
            null
        )' 
    member Measures.[Снижение цены ]
    as 'IIF
        (
            (Measures.[Отклонение цены]) < 0,
            -Measures.[Отклонение цены],
            null
        )'
select
    Filter({
        Measures.[Цена (без учета прироста)],
        Measures.[Прирост цены, входящий в состав текущей цены],
        Measures.[Снижение цены ]
    }, Measures.[Цена (без учета прироста)] > 0) on columns,
    {<%all_regions%>} on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        <%selected_food%>
    )
    ]]>
  </query>

</root>