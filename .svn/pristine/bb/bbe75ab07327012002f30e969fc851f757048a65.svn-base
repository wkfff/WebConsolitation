<?xml version="1.0" encoding="windows-1251"?>
<root>  
<query id="Oil_0001_0001_date">
    <![CDATA[
with
    member Measures.[ДанныеНа]
    as '[Период].[День].CurrentMember.UniqueName'
select
    {Measures.[ДанныеНа]} on columns,
    Tail
    (
        Filter
        (
            OpeningPeriod
            (
                [Период].[День].[День],
                [Период].[День].[Данные всех периодов].[2008]
            ) : ClosingPeriod
            (
                [Период].[День].[День],
                [Период].[День].[Данные всех периодов].[2012]
            ),
            not IsEmpty([Measures].[Цена])
        )
    ) on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
  ]]>
  </query>

  <query id="Oil_0001_0001_lastDate">
<![CDATA[
with     
    member [Measures].[ДанныеНа]     
    as '[Период].[День].CurrentMember.UniqueName'     
    set [NonEmptySet]     
    as ' Tail
        (
            Filter     
            (
                Descendants   
                (
                    [Период].[День].[Данные всех периодов].[<%period_year%>],
                    [Период].[День].[День],
                    SELF   
                ),
                not IsEmpty ( [Measures].[Цена] ) and 
                (
                    [Период].[День].CurrentMember.Properties("PKID") < [Период].[День].[Данные всех периодов]<%period_cur_date%>.Properties("PKID") 
                ) 
            )   
        )  ' 
select
    { [Measures].[ДанныеНа] } on columns,
    { [NonEmptySet] } on rows     
from    [ОРГАНИЗАЦИИ_Цены и тарифы]  
  ]]>
</query>

  <query id="OIL_0001_0001_Grid">
    <![CDATA[
-- OIL_0001_0001_Grid 
with  
    member [Период].[День].[Отчетная дата]  
    as '[Период].[День].[Данные всех периодов]<%period_cur_date%> '             
    member [Период].[День].[30 декабря прошлого года]                  
    as '[Период].[День].[Данные всех периодов].[<%period_last_year%>].[Полугодие 2].[Квартал 4].[Декабрь].[30] '
    member [Период].[День].[абсолютное откл] 
    as 'IIF 
        (
            isEmpty 
            (
                [Период].[День].[Отчетная дата] 
            )or isEmpty 
            (
                [Период].[День].[30 декабря прошлого года] 
            ),
            null,
            IIF
            (
                (
                    [Период].[День].[Отчетная дата] = 0
                ),
                null,
                [Период].[День].[Отчетная дата]-[Период].[День].[30 декабря прошлого года] 
            )
        )' 
    member [Период].[День].[темп прироста] 
    as 'IIF 
        (
            IsEmpty
            (
                [Период].[День].[30 декабря прошлого года]
            ) or 
            (
                [Период].[День].[30 декабря прошлого года]
            ) = 0,
            null,
            [Период].[День].[абсолютное откл] / [Период].[День].[30 декабря прошлого года] 
        ) '   
    set [Организации] 
    as 'filter 
        (
            descendants 
            (
                [Организации].[Предприятия торговли].[Все организации],
                [Организации].[Предприятия торговли].[Все организации].Level ,
                AFTER 
            )  ,
            not 
            (
                [Организации].[Предприятия торговли].Currentmember is [Организации].[Предприятия торговли].Currentmember.Parent.DataMember
            ) and not isEmpty ([Measures].[Цена]) 
        )' 
    set [Территории] 
    as 'Filter      
        (
            Generate       
            (
                Descendants            
                (
                    [Территории].[РФ].[Все территории],
                    [Территории].[РФ].[Субъект РФ],
                    SELF            
                ),
                {
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].CurrentMember.DataMember        
                }  + Filter  
                  (
                      Descendants 
                      (
                          [Территории].[РФ].CurrentMember,
                          [Территории].[РФ].[МР ГО],
                          SELF 
                      ),
                      not ([Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember)
                  )       
            ) ,
            IIF      
            (
                [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember,
                [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край].DATAMEMBER,
                true      
            )      
        ) -     
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край]   
        }'             
    set [Территории ФО] 
    as 'Filter      
        (
            Generate       
            (
                Descendants            
                (
                    [Территории].[РФ].[Все территории].[Российская Федерация]<%selected_fo%>,
                    [Территории].[РФ].[Субъект РФ],
                    SELF            
                ),
                {
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].CurrentMember.DataMember        
                }  + Filter  
                  (
                      Descendants 
                      (
                          [Территории].[РФ].CurrentMember,
                          [Территории].[РФ].[МР ГО],
                          SELF 
                      ),
                      not ([Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember)
                  )       
            ) ,
            IIF      
            (
                [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember,
                [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край].DATAMEMBER,
                true      
            )      
        ) -     
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край]   
        }' 
SET [NonFilterRowSet]                  
    AS '{
            {
                [Территории].[РФ].[Все территории].[Российская Федерация]
            }*
            {
                [Организации].[Предприятия торговли].[Среднее по РФ] 
            }  
        }+{
            {
                [Территории].[РФ].[Все территории].[Российская Федерация]<%selected_fo%>
            }*
            Filter
            (
            {
                [Организации].[Предприятия торговли].[Среднее по ФО]
            }, "<%selected_fo%>" <> ""
            )
        }+
        {
            [Территории ФО]  
            *                  
            {
                {
                    [Организации].[Предприятия торговли].[Все организации]   
                } + [Организации]     
            }   
        } '    
    member [Период].[День].[Наименование] 
    as 'IIF
        (
            [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Значение не указано],
            [Организации].[Реестр продукции сопоставимый].CurrentMember.Name,
            IIF 
            (
                [Организации].[Предприятия торговли].CurrentMember is [Организации].[Предприятия торговли].[Все организации],
                [Территории].[РФ].CurrentMember.Name,
                [Организации].[Предприятия торговли].CurrentMember.Name 
            )
        )  '  
    member [Measures].[Не считаем ранг] 
    as ' 
        (
            [Организации].[Предприятия торговли].CurrentMember is [Организации].[Предприятия торговли].[Все организации] 
        ) or 
        (
            [Организации].[Предприятия торговли].CurrentMember is [Организации].[Предприятия торговли].[Среднее по РФ] 
        ) or 
        (
            [Организации].[Предприятия торговли].CurrentMember is [Организации].[Предприятия торговли].[Среднее по ФО] 
        ) or
        (
            [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Значение не указано]
        )' 
    member [Период].[День].[Уровень] 
    as 'IIF
         ( 
             [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Значение не указано], 
             -1,
             IIF 
             (
                [Measures].[Не считаем ранг],
                0,
                1 
             )
         )    '  
    member [Период].[День].[Отчетная дата не областей] 
    as 'IIF 
        (
            [Период].[День].[Уровень]=0,
            null,
            [Период].[День].[Отчетная дата] 
        )' 
    member [Период].[День].[Макс Ранг] 
    as 'IIF 
        (
            [Measures].[Не считаем ранг] ,
            null,
            max 
            (
                Filter
                (
                    [NonFilterRowSet],
                    [Период].[День].[Отчетная дата не областей] <> 0
                ),
                [Период].[День].[Отчетная дата не областей] 
            ) 
        )' 
    member [Период].[День].[Мин Ранг] 
    as 'IIF 
        (
            [Measures].[Не считаем ранг] ,
            null,
            min 
            (
                Filter
                (
                    [NonFilterRowSet],
                    [Период].[День].[Отчетная дата не областей] <> 0
                ),
                [Период].[День].[Отчетная дата не областей] 
            ) 
        )  ' 
    member [Период].[День].[Абсл откл не областей] 
    as 'IIF 
        (
            [Период].[День].[Уровень]=0,
            null,
            [Период].[День].[абсолютное откл] 
        )' 
    member [Период].[День].[Мин Ранг откл] 
    as 'IIF 
        (
            [Measures].[Не считаем ранг] ,
            null,
            min 
            (
                Filter
                (
                    [NonFilterRowSet],
                    [Период].[День].[Абсл откл не областей] <> 0
                ),
                [Период].[День].[Абсл откл не областей] 
            ) 
        )    ' 
    member [Период].[День].[Макс Ранг откл] 
    as 'IIF 
        (
            [Measures].[Не считаем ранг] ,
            null,
            max 
            (
                Filter
                (
                    [NonFilterRowSet],
                    [Период].[День].[Абсл откл не областей] <> 0
                ),
                [Период].[День].[Абсл откл не областей] 
            ) 
        )    ' 
    member [Организации].[Предприятия торговли].[Среднее по РФ] 
    as 'AVG ( [Территории] 
        * [Организации] )' 
    member [Организации].[Предприятия торговли].[Среднее по ФО] 
    as 'AVG 
        (
            [Территории ФО] 
            * [Организации] 
        )'  
    member [Период].[День].[Предел] 
    as ' 
        (
            [Measures].[Значение],
            [Организации].[Предприятия торговли].DefaultMember,
            [Период].[День].DefaultMember,
            [Организации].[Тип цены].DefaultMember
        )'  
    member [Measures].[Цена ] 
    as 'IIF
        (
            [Организации].[Предприятия торговли].CurrentMember is [Организации].[Предприятия торговли].[Все организации] and
            ([Период].[День].CurrentMember is [Период].[День].[Отчетная дата]),
            ([Период].[День].[Предел], [Measures].[Значение]),
            [Measures].[Цена]
        )' 
        
    set [Все виды топлива]
    as '{
            [Организации].[Реестр продукции сопоставимый].[Вся продукуция].[Бензин АИ-92],
            [Организации].[Реестр продукции сопоставимый].[Вся продукуция].[Бензин АИ-95],
            [Организации].[Реестр продукции сопоставимый].[Вся продукуция].[Дизельное топливо]  
        }'
select
    {
        [Период].[День].[Наименование],
        [Период].[День].[Отчетная дата],
        [Период].[День].[30 декабря прошлого года],
        [Период].[День].[абсолютное откл] ,
        [Период].[День].[темп прироста] ,
        [Период].[День].[Уровень],
        [Период].[День].[Макс Ранг]    ,
        [Период].[День].[Мин Ранг] ,
        [Период].[День].[Мин Ранг откл] ,
        [Период].[День].[Макс Ранг откл],
        [Период].[День].[Предел] 
    } on columns,
    {
        {
            <%selected_oil%>
        } *
        {
            {
                {
                    [Территории].[РФ].[Все территории].[Значение не указано]
                }
                *
                {
                    [Организации].[Предприятия торговли].[Все организации]
                }
            } +
            Filter 
            (
                [NonFilterRowSet],
                not isEmpty 
                (
                    [Период].[День].[Отчетная дата] 
                ) 
            ) 
        }
    } on rows 
from [ОРГАНИЗАЦИИ_Цены и тарифы] 
     ]]>
  </query>
    
<query id="Oil_0001_0001_Chart1">
 <![CDATA[ 
 -- Oil_0001_0001_Chart1
with       
    set [Территории]            
    as 'Filter      
        (
            Generate       
            (
                Descendants            
                (
                    [Территории].[РФ].[Все территории].[Российская Федерация]<%selected_fo_chart%>,
                    [Территории].[РФ].[Субъект РФ],
                    SELF            
                ),
                {
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].CurrentMember.DataMember        
                }  + Filter  
                  (
                      Descendants 
                      (
                          [Территории].[РФ].CurrentMember,
                          [Территории].[РФ].[МР ГО],
                          SELF 
                      ),
                      not ([Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember)
                  )       
            ) ,
            IIF      
            (
                [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember,
                [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край].DATAMEMBER,
                true      
            )      
        ) -     
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край]   
        }'  
        
        
    set [Организации]     
    as 'Descendants     
        (
            [Организации].[Предприятия торговли].[Все организации],
            [Организации].[Предприятия торговли].[Организация],
            SELF     
        )'      
    member [Measures].[На начало года]    
    as 'IIF
        (
            IsEmpty
            (
                (
                    [Measures].[Цена],
                    [Период].[День].[Данные всех периодов].[<%period_last_year%>].[Полугодие 2].[Квартал 4].[Декабрь].[30] 
                )
            ),
            [Measures].[На текущую дату],
            (
                [Measures].[Цена],
                [Период].[День].[Данные всех периодов].[<%period_last_year%>].[Полугодие 2].[Квартал 4].[Декабрь].[30] 
            ) - [Measures].[Снижение]
        )    '    
    member [Measures].[На текущую дату]   
    as '   
        (
            [Measures].[Цена],
            [Период].[День].[Данные всех периодов]<%period_cur_date%> 
        )'  
        
    member [Measures].[Отклонение]  
    as 'IIF
        (
            IsEmpty
            (
              (
                [Measures].[Цена],
                [Период].[День].[Данные всех периодов].[<%period_last_year%>].[Полугодие 2].[Квартал 4].[Декабрь].[30] 
              )
            ),
            null,
            [Measures].[На текущую дату] -
            (
               [Measures].[Цена],
               [Период].[День].[Данные всех периодов].[<%period_last_year%>].[Полугодие 2].[Квартал 4].[Декабрь].[30] 
            )
        )' 
  
    member [Measures].[Прирост]  
    as 'IIF
        (
            [Measures].[Отклонение] > 0,
            [Measures].[Отклонение],
            0
        )' 
    
    member [Measures].[Снижение]  
    as 'IIF
        (
            [Measures].[Отклонение] < 0,
            -[Measures].[Отклонение],
            0
        )' 

    member [Measures].[Наименование] 
    as 'IIF
        (
            (InStr([Организации].[Предприятия торговли].CurrentMember.Name,"среднее") > 0 or InStr([Организации].[Предприятия торговли].CurrentMember.Name,"Среднее") > 0) and
            InStr([Организации].[Предприятия торговли].CurrentMember.Name,"значение") > 0,
            [Территории].[РФ].CurrentMember.Name + "
(независимые покупатели)",
            [Территории].[РФ].CurrentMember.Name + "
(" +[Организации].[Предприятия торговли].CurrentMember.Name + ")"
        )'
        
    member [Measures].[Предел] 
    as ' 
        (
            [Measures].[Значение],
            [Организации].[Предприятия торговли].DefaultMember,
            [Период].[День].DefaultMember,
            [Организации].[Тип цены].DefaultMember
        )'       
        
select
    {
        [Measures].[Наименование],
        [Measures].[На начало года],
        [Measures].[Прирост], 
        [Measures].[Снижение]   
    } on columns,
    Filter 
    (
        {[Территории] 
        * [Организации]},
        not IsEmpty([Measures].[На текущую дату]) and not IsEmpty([Measures].[На начало года]) and ([Measures].[На начало года] > 0) and ([Measures].[Прирост] > 0 or ([Measures].[На текущую дату] > [Measures].[Предел] and [Measures].[Предел] <> 0) )
    ) on rows 
from [ОРГАНИЗАЦИИ_Цены и тарифы]       
where        
    (
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        <%selected_oil_chart%>
    ) 
  ]]>
 </query>

<query id="Oil_0001_0001_avg">
<![CDATA[
    --Oil_0001_0001_avg
with 

set [Территории]            
    as 'Filter      
        (
            Generate       
            (
                Descendants            
                (
                    [Территории].[РФ].[Все территории].[Российская Федерация]<%selected_fo_chart%>,
                    [Территории].[РФ].[Субъект РФ],
                    SELF            
                ),
                {
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].CurrentMember.DataMember        
                }  + Filter  
                  (
                      Descendants 
                      (
                          [Территории].[РФ].CurrentMember,
                          [Территории].[РФ].[МР ГО],
                          SELF 
                      ),
                      not ([Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember)
                  )       
            ) ,
            IIF      
            (
                [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember,
                [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край].DATAMEMBER,
                true      
            )      
        ) -     
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край]   
        }'

    set [Организации] 
    as 'Descendants 
        (
            [Организации].[Предприятия торговли].[Все организации],
            [Организации].[Предприятия торговли].[Организация],
            SELF 
        )' 

    member [Measures].[На текущую дату] 
    as ' 
        (
            [Measures].[Цена],
            [Период].[День].[Данные всех периодов]<%period_cur_date%>
        )' 

    member [Measures].[Среднее]
    as 'AVG({[Территории]
        * [Организации]},[Measures].[На текущую дату] )'
select
    {
        [Measures].[Среднее]
    } on columns
from [ОРГАНИЗАЦИИ_Цены и тарифы] 
where 
    (
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        <%selected_oil_chart%>
    )  
  ]]>
	</query>

  <query id="Oil_0001_0001_limit">
    <![CDATA[
    --Oil_0001_0001_limit
with    
    set [Территории]            
    as 'Filter      
        (
            Generate       
            (
                Descendants            
                (
                    [Территории].[РФ].[Все территории].[Российская Федерация]<%selected_fo_chart%>,
                    [Территории].[РФ].[Субъект РФ],
                    SELF            
                ),
                {
                    [Территории].[РФ].CurrentMember      
                }  + Filter  
                  (
                      Descendants 
                      (
                          [Территории].[РФ].CurrentMember,
                          [Территории].[РФ].[МР ГО],
                          SELF 
                      ),
                      not ([Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember)
                  )       
            ) ,
            IIF      
            (
                [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember,
                [Территории].[РФ].CurrentMember is [Территории].[РФ].[Все территории].[Российская Федерация].[Южный федеральный округ].[Краснодарский край].DATAMEMBER,
                true      
            )      
        ) '   
        
    member [Measures].[Предел]    
    as '    
        (
            [Measures].[Значение],
            [Организации].[Реестр организаций сопоставимый].DefaultMember,
            [Период].[День].DefaultMember,
            [Организации].[Тип цены].DefaultMember   
        )'    
       
select
    {  [Measures].[Предел] } on columns,
    non empty[Территории] on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]    
where    
    (
        <%selected_oil_chart%> 
    )    
  ]]>
  </query>
</root>