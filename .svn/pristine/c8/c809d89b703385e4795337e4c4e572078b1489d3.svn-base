<?xml version="1.0" encoding="Windows-1251"?>
<root>

  <query id="FO_0045_0002_Sakhalin_date">
    <![CDATA[
-- FO_0045_0002_Sakhalin_date
with
    member [Measures].[ДанныеНа]
    as '[Период__Период].[Период__Период].CurrentMember.UniqueName'
    set [NonEmptySet]
    as 'Tail
        (
            Filter
            (
                Descendants
                (
                    [Период__Период].[Период__Период].[Данные всех периодов],
                    [Период__Период].[Период__Период].[Месяц],
                    SELF
                ),
                not IsEmpty
                (
                    (
                        [Measures].[Факт]
                    )
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Остатки на начало года"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные квартала"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные полугодия"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные месяца"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Данные года"
                ) and
                (
                   [Период__Период].[Период__Период].CurrentMember.Name <> "Заключительные обороты"
                )
            ),
            1
        )'
select
    { [Measures].[ДанныеНа] } on columns,
    { [NonEmptySet] } on rows
from [ФО_МесОтч_СпрВнутрДолг]
]]>
  </query>

  <query id="FO_0045_0002_Sakhalin_grid">
    <![CDATA[
-- FO_0045_0002_Sakhalin_grid
with     
    set [Районы]    
    as 'Filter    
        (
            Descendants    
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Все районы],
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Уровень 03],
                SELF    
            ),
            not    
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember is [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Parent.DataMember    
            ) and                
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "МР" or [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "ГО"
            )    
        )'   
    member [Районы__Сопоставимый].[Районы__Сопоставимый].[Итого ]  
    as 'IIF 
        (
            [Период__Период].[Период__Период].CurrentMember is [Период__Период].[Период__Период].[Темп роста],
            IIF 
            (
                IsEmpty 
                (
                    Sum([Районы], [Период__Период].[Период__Период].[Месяц предыдущего года])
                ) or (Sum([Районы], [Период__Период].[Период__Период].[Месяц предыдущего года])) = 0,
                null,
                1000 
                * Sum([Районы], [Период__Период].[Период__Период].[Месяц текущего года]) / Sum([Районы], [Период__Период].[Период__Период].[Месяц предыдущего года])
            ),
            Aggregate({[Районы]}) 
        )'  
    member [Период__Период].[Период__Период].[Месяц текущего года]     
    as '[Период__Период].[Период__Период].[Данные всех периодов].[<%period_year%>].[<%period_half_year%>].[<%period_quater%>].[<%period_month%>]'     
    member [Период__Период].[Период__Период].[Месяц предыдущего года]     
    as 'ParallelPeriod     
        (
            [Период__Период].[Период__Период].[Год],
            1,
            [Период__Период].[Период__Период].[Данные всех периодов].[<%period_year%>].[<%period_half_year%>].[<%period_quater%>].[<%period_month%>]
        )'     
    member [Период__Период].[Период__Период].[Отклонение]     
    as 'IIF     
        (
            IsEmpty     
            (
                [Период__Период].[Период__Период].[Месяц текущего года]     
            ) or IsEmpty     
            (
                [Период__Период].[Период__Период].[Месяц предыдущего года]     
            ),
            null,
             [Период__Период].[Период__Период].[Месяц текущего года] - [Период__Период].[Период__Период].[Месяц предыдущего года]     
        )'     
    member [Период__Период].[Период__Период].[Темп роста]     
    as 'IIF     
        (
            IsEmpty     
            (
                [Период__Период].[Период__Период].[Месяц предыдущего года]     
            ) or [Период__Период].[Период__Период].[Месяц предыдущего года] = 0,
            null,
            1000     
            * [Период__Период].[Период__Период].[Месяц текущего года] / [Период__Период].[Период__Период].[Месяц предыдущего года]     
        )'      
    member [Measures].[Сумма государственного долга]  
    as '[Measures].[Факт] / 1000'  
    member [Measures].[Сумма государственного долга на душу населения]  
    as '[Measures].[Факт] / 1000' 

    member [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Уровни бюджета ] 
    as 'Aggregate
        (
            {
                [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Все].[Бюджет гор.округа],
                [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Все].[Бюджет района],
                [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Все].[Бюджет поселения]
            }
        )' 

select
    {
        {
            {
                [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Все показатели].[МУНИЦИПАЛЬНЫЙ ДОЛГ, всего],
                [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Все показатели].[МУНИЦИПАЛЬНЫЙ ДОЛГ, всего].[объем основного долга по бюджетным кредитам, привлеченным в местный бюджет, всего].[бюджетные кредиты, полученные из бюджета субъекта Российской Федерации].DataMember,
                [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Все показатели].[МУНИЦИПАЛЬНЫЙ ДОЛГ, всего].[объем основного долга по кредитам, полученным муниципальным образованием от кредитных организаций].DataMember,
                [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Все показатели].[МУНИЦИПАЛЬНЫЙ ДОЛГ, всего].[муниципальные гарантии в валюте Российской Федерации] 
            }    
            *     
            {
                (
                    [Период__Период].[Период__Период].[Месяц текущего года],
                    [Measures].[Сумма государственного долга]  
                ),
                (
                    [Период__Период].[Период__Период].[Темп роста],
                    [Measures].[Сумма государственного долга]  
                ),
                (
                    [Период__Период].[Период__Период].[Месяц текущего года],
                    [Measures].[Сумма государственного долга на душу населения]  
                )  
            }    
        }   
    } on columns,
    {
        {
            [Районы__Сопоставимый].[Районы__Сопоставимый].[Итого ]
        } + [Районы] 
    }
     on rows 
from  [ФО_МесОтч_СпрВнутрДолг]   
where 
    (
        [ТипДокумента__СКИФ].[ТипДокумента__СКИФ].[Все].[Данные конс. отчета субъекта в разрезе городов и районов (5+7+10)],
        [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Уровни бюджета ]
    ) 
    ]]>
  </query>

  <query id="FO_0045_0002_Sakhalin_chart">
    <![CDATA[
-- FO_0045_0002_Sakhalin_chart
with         
    member [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Бюджетные кредиты из бюджета]
    as '[Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Все показатели].[МУНИЦИПАЛЬНЫЙ ДОЛГ, всего].[объем основного долга по бюджетным кредитам, привлеченным в местный бюджет, всего].[бюджетные кредиты, полученные из бюджета субъекта Российской Федерации].DataMember'
 
    member [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Кредиты кредитных организаций]
    as '[Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Все показатели].[МУНИЦИПАЛЬНЫЙ ДОЛГ, всего].[объем основного долга по кредитам, полученным муниципальным образованием от кредитных организаций].DataMember'

    member [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Муниципальные гарантии]
    as '[Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Все показатели].[МУНИЦИПАЛЬНЫЙ ДОЛГ, всего].[муниципальные гарантии в валюте Российской Федерации] '

    set [Районы]        
    as 'Filter        
        (
            Descendants        
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Все районы],
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Уровень 03],
                SELF        
            ),
            not        
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember is [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Parent.DataMember        
            ) and                    
            (
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "МР" or 
                [Районы__Сопоставимый].[Районы__Сопоставимый].CurrentMember.Properties("Тип территории") = "ГО"    
            )        
        )'        
    member [Measures].[Сумма государственного долга]         
    as '[Measures].[Факт] / 1000'          

    member [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Уровни бюджета ] 
    as 'Aggregate
        (
            {
                [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Все].[Бюджет гор.округа],
                [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Все].[Бюджет района],
                [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Все].[Бюджет поселения]
            }
        )'

select
    { 
       [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Бюджетные кредиты из бюджета],
       [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Кредиты кредитных организаций],
       [Показатели__СопМесОСпВнтД].[Показатели__СопМесОСпВнтД].[Муниципальные гарантии]
    } on columns,
    { [Районы] } on rows     
from  [ФО_МесОтч_СпрВнутрДолг]
where  
    (
        [Measures].[Сумма государственного долга],
        [Период__Период].[Период__Период].[Данные всех периодов].[<%period_year%>].[<%period_half_year%>].[<%period_quater%>].[<%period_month%>],
        [ТипДокумента__СКИФ].[ТипДокумента__СКИФ].[Все].[Данные конс. отчета субъекта в разрезе городов и районов (5+7+10)],
        [Уровни бюджета__СКИФ].[Уровни бюджета__СКИФ].[Уровни бюджета ]
    )  
    ]]>
  </query>

  <query id="FO_0045_0002_Sakhalin_population">
    <![CDATA[
-- FO_0045_0002_Sakhalin_population 
with   
    member Measures.[isMRGO] 
    as 'not( [Районы].[Сопоставимый].CurrentMember is [Районы__Сопоставимый].[Районы__Сопоставимый].[Итого ] ) '
         
    member Measures.[Численность постоянного населения по МО] 
    as 'IIF 
        (
            not(Measures.[isMRGO]),
            Sum 
            (
                [Города и районы],
                Measures.[Численность постоянного населения по МО]
            ),
            1000 * Measures.[За период]
        )  '  
    member Measures.[Численность постоянного населения] 
    as 'IIF 
        (
            not IsEmpty 
            (
                (
                    Measures.[Численность постоянного населения по МО],
                    [Период__Год Квартал Месяц].[Период__Год Квартал Месяц].CurrentMember
                ) 
            ),
            (
                Measures.[Численность постоянного населения по МО],
                [Период__Год Квартал Месяц].[Период__Год Квартал Месяц].CurrentMember
            ),
            (
                Tail 
                (
                    Filter 
                    (
                        {
                            [Период__Год Квартал Месяц].[Период__Год Квартал Месяц].[Данные всех периодов].[2000] : [Период__Год Квартал Месяц].[Период__Год Квартал Месяц].CurrentMember.PrevMember
                        },
                        not IsEmpty 
                        (
                            Measures.[Численность постоянного населения по МО] 
                        ) 
                    ) 
                ).Item(0),
                Measures.[Численность постоянного населения по МО] 
            ) 
        )' 
    
    set [Города]
    as 'Filter
        (
            Descendants
            (
                [Районы].[Сопоставимый].[Все районы],
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Уровень 03],
                SELF
            ),
            not
            (
                [Районы].[Сопоставимый].CurrentMember is [Районы].[Сопоставимый].CurrentMember.Parent.DataMember
            ) and
            (
                [Районы].[Сопоставимый].CurrentMember.Properties("Тип территории") = "ГО"
            )
        )'
    set [Районы]
    as 'Filter
        (
            Descendants
            (
                [Районы].[Сопоставимый].[Все районы],
                [Районы__Сопоставимый].[Районы__Сопоставимый].[Уровень 03],
                SELF
            ),
            not
            (
                [Районы].[Сопоставимый].CurrentMember is [Районы].[Сопоставимый].CurrentMember.Parent.DataMember
            ) and
            (
                [Районы].[Сопоставимый].CurrentMember.Properties("Тип территории") = "МР"
            )
        )'
    set [Города и районы]
    as '[Города] + [Районы]'    

    member [Районы__Сопоставимый].[Районы__Сопоставимый].[Итого ] 
    as 'Aggregate({[Города и районы]})'  
    
select
    {
        Measures.[Численность постоянного населения]
    } on columns,
    {
        {
            [Районы__Сопоставимый].[Районы__Сопоставимый].[Итого ]
        } + [Города и районы]
    } on rows 
from [СТАТ_Население_Численность и состав] 
where 
    (
        [Население__Численность и состав].[Население__Численность и состав].[Все показатели].[Численность населения на начало года],
        [Группировки__Население_Численность и состав].[Группировки__Население_Численность и состав].[Все группировки].[По городам и районам],
        [Период__Год Квартал Месяц].[Период__Год Квартал Месяц].[Данные всех периодов].[<%period_year%>]
    ) 
  ]]>
  </query>
  
</root>