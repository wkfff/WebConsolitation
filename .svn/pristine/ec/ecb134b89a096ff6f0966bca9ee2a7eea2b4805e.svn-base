<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInvertSelection.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAPcAAIkFAY8HAo0FAJIGAZgHApMIA5IKBZIJBJUKBZUMB5kKBZoMB5sLBZgOCZ8OCZ0S
        DaENB6EPCqMPCaUOCKcTDacSDaMRC6gRC6oTDa4TDbEUD6IXEq4VEK0WEagWEaYaFagcF6kdGLUWEbIW
        EbMYErUZE7gZE7kbFbscFr4cFrwdF7waFL8eGLodF7AjHrMlILssJ74uKcIdF8IfGsEeGcYgGschHMMg
        GsggGskjHcwjHc8jHc0lH8okHtIlH84mIMwsJtInIdYnIdUpI9cpI9MoItorJdstJ9osJt0sJdIuKcQz
        LtYzLdwwKt0zLd40Lt81L9kyLcc1MMo4M8w7Nsw/OtE3Mt83MdM6Ndc9ONo+OeAyLOE3MeE5M+A4MuM4
        MuE6NOE6NeM7NeM8NuY7NeM/OdpDPuVBO+dAO+VDPedFP+FEPtBEP99GQNBMR9ZOSdlTTtNXU9tXUtVZ
        VN1bVuhHQepHQehIQupJQ+lKRepMRuhNR+tNSO1PSeRRTOxRS+5QSu5UTuxRTPBTTe1VUOxaVPFVUPFa
        VfJdV/JZVPRdWNZgXN9gW+hgW/RhXPViXfdjXvRjXd1oZNlsaNpyb9pxbd1ybtt3c9t1cdt4dNx5dt18
        eeFkYORqZu5pZOZtafdmYfpnYvJpZPtoY/trZvlpZPpsZ/ttaPtuaehybfxwa+B2cup2cu16dvt2cfl7
        d/N+et6AfOWAffyBfeKFguSJhuyLh+aOivKOiuiSj/2Tj+SXleuVkuSal+uZlu6al+Wdmu+em+ucmfaV
        kvqYlf2em+agneqhn/Kin+elo+mkoeinpemqp+msquusqu+urPSpp/Stqvyvreuxr/axrvKxruuzse69
        u/C2tPu2tPK+vPu9u+/CwfXFw/DGxPDFw/7Fw/DIxvLOzfLMyvzMy/PQz/PR0PTX1vTT0vvW1fvT0vXY
        1/Ta2fTd3fjc2/Xi4vbl5fbt7fbu7vbp6fbw7/fy8vjy8vj19fn29vr39/r4+Pv6+vz7+/39/f////7+
        /iwAAAAAIAAgAAAI/wABhKhEqaDBgwgTIsTkJgCAXvnoSZxIUV68i/LkUdw4EUaAXeO8iRzpjRu3cOXO
        tWOHbtw3bt9IkhS3JECsac1y5lzGjNu7fP38Cf23T565acmY6dRpDYaAOJsuXcp0qVIveEKzahV675om
        SlSlXtrkQkCMKlSoTJkCTN/Wt1nNzZGSNm2VDQE2gADx4YOxt/zeiTtH7+07KXr3hmiQwICBAwJibR23
        6MWDBA0+TDFWTys7EAEcG0CwAEEBAWy06pvUQICAAQUGBHCtbOs0BLALLIjgQIGHdlnvsRmgYIFx4woQ
        xAq6dc4A4w4qWFBgKeu/OQQiaN/uYAEtuP7Yef9wEKECBwwd1mV1JqEChffvK0j4ntUerX1Z30CgwIEE
        Biz/CMWPFRd0wMGBBmJQi1b4vDHBNVkpc0F/J2iwSlbllEBCCRxqqMEtDMKRQQaSZMVOCyScwIIJx2Ql
        jAgoxIjCCSaAmBU+csBoAhbM3QOEijfIgE1Wsqwww5EspJCLVvnQYeQMLChxj1D9ZJGCDT3YoA2RMuSQ
        gw018MIkI116aQMTU/rTjxk18PCDDs9k5QsOP/Cggy9MckLnD3zqYAZ+/uyjhQ5BDOGDmEJ140MRPgjD
        ZCc7DCGppDt0ktU8URRhxBFGWCoUPm0IEQyTnwhxxKmoElFNVt1s2oQTUKz/YU9WwfyiWipJPKHrrk34
        gU9WtuR6RRdlbEGNdaqxskUYzDbbBRdbCpWPH1yEMUYZaozRCKCqtfLFGeCGW4YYyGgFjRhnpJFGHXnU
        gQY0W+nTChl11FuvGmjsEY1W8RCiRh133JGHIHzoIYg6Wu0TjSd82OEwHoXg8o5W/cBiBx989KHHH4kE
        EgggkWClFT/ubENNNuTMSvEwfXgcCCF//IHIITQbIgrC4L2VzzCDJELzIYjw8ccjjhTtiCKRSONWzkKl
        A0siRhcNSR5/gGL11aA88so2Km+1TzrEgAIJ1laXcscfpqiiCipss03KKK7oIs025ICTTTGzvH1K23yr
        PpLGGHoc8ggopZRiiimnnEJKKaGEMkrjo5CCeOKUUw6KFyqgoMIMOQSBxKtXeOFFF2CA0QXppaeueupd
        FBEQADs=
</value>
  </data>
  <data name="btnClearFilter.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhIAAgAPcAAIkFAY8HAo0FAJIGAZgHApMIA5IKBZIJBJUKBZUMB5kKBZoMB5sLBZgOCZ8OCZ0S
        DaENB6EPCqMPCaUOCKcTDacSDaMRC6gRC6oTDa4TDbEUD6IXEq4VEK0WEagWEaYaFagcF6kdGLUWEbIW
        EbMYErUZE7gZE7kbFbscFr4cFrwdF7waFL8eGLodF7AjHrMlILssJ74uKcIdF8IfGsEeGcYgGschHMMg
        GsggGskjHcwjHc8jHc0lH8okHtIlH84mIMwsJtInIdYnIdUpI9cpI9MoItorJdstJ9osJt0sJdIuKcQz
        LtYzLdwwKt0zLd40Lt81L9kyLcc1MMo4M8w7Nsw/OtE3Mt83MdM6Ndc9ONo+OeAyLOE3MeE5M+A4MuM4
        MuE6NOE6NeM7NeM8NuY7NeM/OdpDPuVBO+dAO+VDPedFP+FEPtBEP99GQNBMR9ZOSdlTTtNXU9tXUtVZ
        VN1bVuhHQepHQehIQupJQ+lKRepMRuhNR+tNSO1PSeRRTOxRS+5QSu5UTuxRTPBTTe1VUOxaVPFVUPFa
        VfJdV/JZVPRdWNZgXN9gW+hgW/RhXPViXfdjXvRjXd1oZNlsaNpyb9pxbd1ybtt3c9t1cdt4dNx5dt18
        eeFkYORqZu5pZOZtafdmYfpnYvJpZPtoY/trZvlpZPpsZ/ttaPtuaehybfxwa+B2cup2cu16dvt2cfl7
        d/N+et6AfOWAffyBfeKFguSJhuyLh+aOivKOiuiSj/2Tj+SXleuVkuSal+uZlu6al+Wdmu+em+ucmfaV
        kvqYlf2em+agneqhn/Kin+elo+mkoeinpemqp+msquusqu+urPSpp/Stqvyvreuxr/axrvKxruuzse69
        u/C2tPu2tPK+vPu9u+/CwfXFw/DGxPDFw/7Fw/DIxvLOzfLMyvzMy/PQz/PR0PTX1vTT0vvW1fvT0vXY
        1/Ta2fTd3fjc2/Xi4vbl5fbt7fbu7vbp6fbw7/fy8vjy8vj19fn29vr39/r4+Pv6+vz7+/39/f////7+
        /iwAAAAAIAAgAAAI/wABhKhEqaDBgwgTIsTkJgCAXvnoSZxIUV68i/LkUdw4EUaAXeO8iRzpjRu3cOXO
        tWOHbtw3bt9IkhS3JECsac1y5lzGjNu7fP38Cf23T565acmY6dRpDYaAOJsuXcp0qVIveEKzahV675om
        SlSlXtrkQkCMKlSoTJkCTN/Wt1nNzZGSNm2VDQE2gADx4YOxt/zeiTtH7+07KXr3hmiQwICBAwJibR23
        6MWDBA0+TDFWTys7EAEcG0CwAEEBAWy06pvUQICAAQUGBHCtbOs0BLALLIjgQIGHdlnvsRmgYIFx4woQ
        xAq6dc4A4w4qWFBgKeu/OQQiaN/uYAEtuP7Yef9wEKECBwwd1mV1JqEChffvK0j4ntUerX1Z30CgwIEE
        Biz/CMWPFRd0wMGBBmJQi1b4vDHBNVkpc0F/J2iwSlbllEBCCRxqqMEtDMKRQQaSZMVOCyScwIIJx2Ql
        jAgoxIjCCSaAmBU+csBoAhbM3QOEijfIgE1Wsqwww5EspJCLVvnQYeQMLChxj1D9ZJGCDT3YoA2RMuSQ
        gw018MIkI116aQMTU/rTjxk18PCDDs9k5QsOP/Cggy9MckLnD3zqYAZ+/uyjhQ5BDOGDmEJ140MRPgjD
        ZCc7DCGppDt0ktU8URRhxBFGWCoUPm0IEQyTnwhxxKmoElFNVt1s2oQTUKz/YU9WwfyiWipJPKHrrk34
        gU9WtuR6RRdlbEGNdaqxskUYzDbbBRdbCpWPH1yEMUYZaozRCKCqtfLFGeCGW4YYyGgFjRhnpJFGHXnU
        gQY0W+nTChl11FuvGmjsEY1W8RCiRh133JGHIHzoIYg6Wu0TjSd82OEwHoXg8o5W/cBiBx989KHHH4kE
        EgggkWClFT/ubENNNuTMSvEwfXgcCCF//IHIITQbIgrC4L2VzzCDJELzIYjw8ccjjhTtiCKRSONWzkKl
        A0siRhcNSR5/gGL11aA88so2Km+1TzrEgAIJ1laXcscfpqiiCipss03KKK7oIs025ICTTTGzvH1K23yr
        PpLGGHoc8ggopZRiiimnnEJKKaGEMkrjo5CCeOKUUw6KFyqgoMIMOQSBxKtXeOFFF2CA0QXppaeueupd
        FBEQADs=
</value>
  </data>
</root>