<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbQuestion.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMAAwAIcAAAAhYwAhawAhcwApewAphAApjAAxjAAxlAAxnAgxewg5lAg5nBApaxA5jBA5nBgx
        WhhKpSExWiExYyE5YyE5ayFCjCk5YylCaylKjClSrTFCazFKezFjxjlKczlahDlanDljtUJSc0JSe0Jj
        lEpzpUp7tUp71lJjhFJrpVprhFprjFp7pVp7tVqEtVqM52NzjGOErWOM1mt7lGuMtWuMxmuUvWuc/3OE
        nHOUtXOcxnOc1nuMpXuctXucvXucznul1nul74ScvYSczoSlxoSlzoStzoSt1oylvYylxoytxoytzoy1
        1oy155StxpStzpSt1pS11pS13pS955y1zpy11py13py91py93py955zG76WtvaW1zqW91qW956XG3qXG
        56XG76XO7629zq3G3q3G563O563O763O963W/7XG1rXG57XO3rXO57XO77XW97XW/7Xe/73G1r3O573W
        573W773W973W/73e973e/8bO3sbW58be78be98be/8bn/87W3s7e787e987n987n/87v/9be3tbe59bn
        79bn99bn/9bv/97n597n797n997v/973/+fn5+fn7+fv7+fv9+fv/+f3/+f//+/v7+/v9+/39+/3/+//
        //f39/f3//f///8A////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAACfACwAAAAAMAAwAAAI/wA/CRxIsCCgRYsiSVq4MFKkRYwO
        ASpIsaJFgoAUSrp0CZPHjx85SmIEaOLFkwYjceSIiVMnUDBjeuLEyWPDkihPHtzYkWbMn0A7ZcqEaSEj
        PTkrLoKk8pJPoFB/Ci0qKZKePEkHGloqKRMnqJ46iR37Eqimog/1pMm6dVFXT0DDilUjpK4QNWLh/pw0
        8qiYnG0lYdILSq5YIQ0MHDhgQAAABjMaadJEmC+jo01OGtoaCVNZw500oQhAIMMTIQQGOAaAoVGlSppi
        TroMaM0Ri382KywbevJkIQAGEKjyO4BwAQE+vKZUCa4nRxIBcdFSMbfbTDB7+9aEIYABAhVcN/8KIICx
        AAFtKKmntAmUpkYS5eygqMe6pMLbtxs/kFqI+u6LDTCAD+up1x50gOhBxXwE5ZEbI5Tlp8lyAhDAGAEE
        UvJBAAEOSIkjIDrCniUS6bFGCgSl4aBbk722XIEslGaCA1Cot+FiqfkQYoiVbIJIgnr0cMNAKv7ByCQT
        VlJggYi0EAMQP3zoSALlXdjFjooo4kgljiQoxxQoClQkI5RosuSZO4JoBmkHQOAABFlmmciciYC4xxxr
        cBHCC2KqCAhzaKaZJgvlQWACB2bQqWgiWd6ZBhca8PlJGn6KqJ6ggmbJRwIGLGCDC4kuqqgie8gxxhgW
        SEppHoCIiCmIccr/mYgPipkABB+KDqLrroMksgcbp1qgQp+sYhqrIqIq0KYUifDqLK90AMuFsAKJoaIe
        iDhyrKiKfrGYFM/y6se4g/gRLRdUUPvJFtbqIQiy3OaqqxRtPjvuvfjy0QYZXCih7hTWyrFHvOEOQi8I
        uuKrcB99jButF1QM8S+7acwhCJ0F83qHFF8oPG7DDIeMhxkQTwFDqgM1we4ae2TsscchxyyyG/xOMUQE
        kaas8hhr8CHuy+P6QAMNZsjcBx5IJ11HGV5M0UQNEexJ0BE7s8EH0H4w7EYFAHQNgA9Jh520G0w7PcQG
        FoSpc9VXf2w0DV4DEEACbog9dtlNDNFCBB2c/0BRD1RPwQUbdxid9IYDmDcAE3bD4cYXV0yBxBA1PGCB
        3xXxEDgXZNRhN9IgVIgjAVnAYbrpb5wBORST17DBBCJgnvnmXpjhudg/CAeBDRyAcDocqZeBxRWsU+4B
        35JehMMRtJfhxvNvvAHHDxBwkAUQZwDvxhlgDA+FEkMYj3PyJ82g+RBNTEHFFVhgUcYZz7sRffRumDE8
        8eAP0UMLE+A8bFYzmEEQgjAEJDShCVCAwhUWiAUzyI97+Auf/mZAggdMoAPkS8oNYCDAAfZAgkNQggLB
        AEEohK8HPZhBCR6AMxFkpSIqWMEKzMeDGqJwCCPMwvco14IKRsACIXjhSY1UIIIRrAAGHOTBB6GQBR3m
        gAQXiMAENBBEISaFiBqwwAg+uIQmQmEGEwCi7Kz4whNoYAVDMIIUssCEGmjgBBkkY1ZE4IHwMYGNLcCg
        HPcoghL4wAhMYEIJ9LhHOYaABD5YgiAJWUgynqAEPzDCIOPYyKyoAJKTrOQeb0CCEUhNk5uUASVBScpS
        mvITAQEAOw==
</value>
  </data>
</root>