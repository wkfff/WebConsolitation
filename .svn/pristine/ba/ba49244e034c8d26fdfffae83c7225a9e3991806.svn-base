<?xml version="1.0" encoding="Windows-1251"?>
<root>

  <query id="ORG_0003_0012_list_of_dates">
    <![CDATA[ -- name: ORG_0003_0012_list_of_dates
with 
    set [Субъекты РФ] 
    as ' 
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Приволжский федеральный округ].[Кировская область].[Кировская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Архангельская область].[Архангельская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Вологодская область].[Вологодская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Новгородская область].[Новгородская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Республика Карелия].[Республика Карелия],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Тверская область].[Тверская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Костромская область].[Костромская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Ленинградская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Ярославская область].[Ярославская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[г. Санкт-Петербург] 
        }' 
    set [Территории] 
    as 'Generate 
        (
            [Субъекты РФ],
            {
                [Территории].[РФ].CurrentMember
            } + Filter
            (
                Descendants 
                (
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].[МР ГО],
                    SELF_AND_BEFORE 
                ),
                not 
                (
                    [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember 
                ) and ([Measures].[Средняя цена] > 0) 
            ) 
        )' 
select
    {
        Filter
        (
            [Территории],
            [Территории].[РФ].CurrentMember.Properties("Тип территории") = "ГО" or
            [Территории].[РФ].CurrentMember.Name = "г. Санкт-Петербург"
        )
    } on columns,
    {
        filter
        (
            [Период].[День].[День].members,
            [Measures].[Средняя цена] > 0
        )
    } on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where 
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        [Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы]
    )  
    ]]>
  </query>

  <query id= "ORG_0003_0012_list_of_regions">
    <![CDATA[ -- ORG_0003_0012_list_of_regions
with
    set [Субъекты РФ]
    as '
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Приволжский федеральный округ].[Кировская область].[Кировская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Архангельская область].[Архангельская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Вологодская область].[Вологодская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Новгородская область].[Новгородская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Республика Карелия].[Республика Карелия],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Тверская область].[Тверская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Костромская область].[Костромская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Ленинградская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Ярославская область].[Ярославская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[г. Санкт-Петербург] 
        }'
    set [Территории]
    as 'Generate
        (
            [Субъекты РФ],
            {
                [Территории].[РФ].CurrentMember
            } + Filter
            (
                Descendants
                (
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].[МР ГО],
                    SELF_AND_BEFORE
                ),
                not
                (
                    [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember
                ) and ([Measures].[Средняя цена] > 0)
            )
        )'
    member [Measures].[UniqName]
    as '[Территории].[РФ].CurrentMember.UniqueName'
    member [Measures].[RegionType]
    as '[Территории].[РФ].CurrentMember.Properties("Тип территории")'
select
    {
        [Measures].[UniqName],
        [Measures].[RegionType]
    } on columns,
    {
        Filter
        (
            [Территории],
            [Территории].[РФ].CurrentMember.Properties("Тип территории") = "ГО" or
            [Территории].[РФ].CurrentMember.Name = "г. Санкт-Петербург"
        )
    } on rows 
from [ОРГАНИЗАЦИИ_Цены и тарифы] 
where
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        [Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы]
    )
    ]]>
  </query>
  
  <query id = "ORG_0003_0012_grid">
    <![CDATA[ -- ORG_0003_0012_grid
with     
    set [Субъекты РФ]     
    as '     
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Приволжский федеральный округ].[Кировская область].[Кировская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Архангельская область].[Архангельская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Вологодская область].[Вологодская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Новгородская область].[Новгородская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Республика Карелия].[Республика Карелия],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Тверская область].[Тверская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Костромская область].[Костромская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Ленинградская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Ярославская область].[Ярославская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[г. Санкт-Петербург]     
        }'     
    set [Территории]     
    as 'Generate     
        (
            [Субъекты РФ],
            {
                [Территории].[РФ].CurrentMember     
            } + Filter     
            (
                Descendants     
                (
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].[МР ГО],
                    SELF_AND_BEFORE     
                ),
                not     
                (
                    [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember     
                ) and ([Measures].[Средняя цена] > 0)     
            )     
        )'     
    member [Measures].[UniqName]     
    as '[Территории].[РФ].CurrentMember.UniqueName'     
    member [Период].[День].[Текущая дата]   
    as '<%selected_date%>'   
    member [Период].[День].[Предыдущая дата]   
    as '<%prev_date%>'
    member [Measures].[Текущая цена]   
    as '  
        (
            [Measures].[Средняя цена],
            [Период].[День].[Текущая дата]  
        )'   
    member [Measures].[Предыдущая цена]   
    as '  
        (
            [Measures].[Средняя цена],
            [Период].[День].[Предыдущая дата]  
        )'
    member [Measures].[Абсолютное отклонение]
    as 'iif
        (
            IsEmpty
            (
                [Measures].[Текущая цена]
            ) or IsEmpty
            (
                [Measures].[Предыдущая цена]
            ),
            null,
            [Measures].[Текущая цена] - [Measures].[Предыдущая цена]
        )'
    member [Measures].[Темп прироста, %]
    as 'iif
        (
            IsEmpty
            (
                [Measures].[Текущая цена]
            ) or IsEmpty
            (
                [Measures].[Предыдущая цена]
            ),
            null,
            [Measures].[Текущая цена]/[Measures].[Предыдущая цена] - 1
        )'
select
    {{Filter
    (
        {
            {
                except({[Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы].Children},
                {[Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы].DataMember})
            }   
            * { [Measures].[Текущая цена], [Measures].[Абсолютное отклонение], [Measures].[Темп прироста, %] }
        },
        [Measures].[Средняя цена] > 0 
    )} + {{[Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы]} * {[Measures].[UniqName]}}} on columns,
    {
        Filter     
        (
            [Территории],
            (
                (
                    [Территории].[РФ].CurrentMember.Properties("Тип территории") = "ГО" or [Территории].[РФ].CurrentMember.Name = "г. Санкт-Петербург" 
                ) and 
                (
                    ([Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы],
                    [Measures].[Средняя цена]) > 0
                ) 
            )   
        )     
    } on rows     
from [ОРГАНИЗАЦИИ_Цены и тарифы]     
where     
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена]   
    )
    ]]>
  </query>

  <query id = "ORG_0003_0012_grid_dates">
    <![CDATA[ -- ORG_0003_0012_grid_dates
with 
    set [Дни текущего месяца] 
    as '<%selected_month%>.Children' 
    set [Дни предыдущего месяца] 
    as '<%selected_month%>.Lag(1).Children' 
    set [Дни предпредыдущего месяца] 
    as '<%selected_month%>.Lag(2).Children' 
    set [Дни предпредпредыдущего месяца] 
    as '<%selected_month%>.Lag(3).Children' 
    member [Период].[День].[Последний день текущего месяца с данными] 
    as 'Tail 
        (
            Filter 
            (
                { [Дни текущего месяца] },
                [Measures].[Средняя цена] > 0 
            ),
            1 
        ).Item(0).UniqueName'
    member [Период].[День].[Последний день предыдущего месяца с данными]  
    as 'Tail  
        (
            Filter  
            (
                { [Дни предыдущего месяца] },
                [Measures].[Средняя цена] > 0  
            ),
            1  
        ).Item(0).UniqueName'
    member [Период].[День].[Последний день предпредыдущего месяца с данными]  
    as 'Tail  
        (
            Filter  
            (
                { [Дни предпредыдущего месяца] },
                [Measures].[Средняя цена] > 0  
            ),
            1  
        ).Item(0).UniqueName'
    member [Период].[День].[Последний день предпредпредыдущего месяца с данными]  
    as 'Tail  
        (
            Filter  
            (
                { [Дни предпредпредыдущего месяца] },
                [Measures].[Средняя цена] > 0  
            ),
            1  
        ).Item(0).UniqueName'
select
    {
        [Период].[День].[Последний день предпредпредыдущего месяца с данными],
        [Период].[День].[Последний день предпредыдущего месяца с данными],
        [Период].[День].[Последний день предыдущего месяца с данными],
        [Период].[День].[Последний день текущего месяца с данными]
    } on columns,
    {[Организации].[Товары и услуги].[Все товары и услуги].[Медицинские услуги и медикаменты].[Медикаменты] } on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы] 
where 
    (
        [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Вологодская область].DataMember,
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        [Организации].[Тип цены].[Все типы цен].[Розничная цена] 
    )
  ]]>
  </query>

  <query id = "ORG_0003_0012_chart_by_time">
    <![CDATA[ -- ORG_0003_0012_chart_by_time
select
    tail(filter
    (
        {<%first_date%>:
        <%selected_date%>},
        ([Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы], [Measures].[Средняя цена]) > 0
    ), 52) on columns,
    filter
    (
        except 
        (
            {
                [Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы].Children 
            },
            {
                [Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы].DATAMEMBER 
            } 
        ),
        [Measures].[Средняя цена] > 0 
    ) on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]       
where       
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        <%selected_region%>,
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        [Measures].[Средняя цена]  
    )
    ]]>
  </query>

  <query id = "ORG_0003_0012_chart_by_time_names">
    <![CDATA[ -- ORG_0003_0012_chart_by_time_names
with
member [Measures].[День]
as '[Период].[День].CurrentMember.UniqueName'
select
    tail(filter
    (
        {<%first_date%>:
        <%selected_date%>},
        ([Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы], [Measures].[Средняя цена]) > 0
    ), 52) on columns,
    {[Measures].[День]} on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]
where       
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        <%selected_region%>,
        [Организации].[Тип цены].[Все типы цен].[Розничная цена]
    ) 
    ]]>
  </query>

  <query id = "ORG_0003_0012_chart_by_district">
    <![CDATA[ -- ORG_003_0012_chart_by_district
with   
    set [Субъекты РФ]   
    as '   
        {
            [Территории].[РФ].[Все территории].[Российская Федерация].[Приволжский федеральный округ].[Кировская область].[Кировская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Архангельская область].[Архангельская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Вологодская область].[Вологодская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Новгородская область].[Новгородская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Республика Карелия].[Республика Карелия],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Тверская область].[Тверская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Костромская область].[Костромская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[Ленинградская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Центральный федеральный округ].[Ярославская область].[Ярославская область],
            [Территории].[РФ].[Все территории].[Российская Федерация].[Северо-Западный федеральный округ].[г. Санкт-Петербург]   
        }'   
    set [Территории]   
    as 'Generate   
        (
            [Субъекты РФ],
            {
                [Территории].[РФ].CurrentMember   
            } + Filter   
            (
                Descendants   
                (
                    [Территории].[РФ].CurrentMember,
                    [Территории].[РФ].[МР ГО],
                    SELF_AND_BEFORE   
                ),
                not   
                (
                    [Территории].[РФ].CurrentMember is [Территории].[РФ].CurrentMember.Parent.DataMember   
                ) and ([Measures].[Средняя цена] > 0)   
            )   
        )'  
select
filter 
(
    except    
    (
        {
            [Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы].Children    
        },
        {
            [Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы].DATAMEMBER    
        }    
    ),
    [Measures].[Средняя цена] > 0    
) on columns,
    {
        Filter 
        (
            [Территории],
            (
                [Территории].[РФ].CurrentMember.Properties("Тип территории") = "ГО" or [Территории].[РФ].CurrentMember.Name = "г. Санкт-Петербург"
            ) and             
            (
                [Организации].[Товары и услуги].[Все товары и услуги].[Непродовольственные товары].[Горюче-смазочные материалы],
                [Measures].[Средняя цена]
            ) > 0 
        ) 
} on rows
from [ОРГАНИЗАЦИИ_Цены и тарифы]    
where    
    (
        [Источники данных].[Все источники данных].[СТАТ Отчетность - Вологдастат],
        [Организации].[Предприятия торговли].[Все организации].[Значение не указано],
        <%selected_date%>,
        [Организации].[Тип цены].[Все типы цен].[Розничная цена],
        [Measures].[Средняя цена]    
    )
    ]]>
  </query>

</root>