<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImages.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUHhgEyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDU
        WeHmAOHlAO3yGP//Mf//If//APX6AP//VEpKk19eyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDU
        yNDUHhgEyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUvNLWAOfqAOnrF/3+aP//Df7/AP//FcXG
        eRIRurW4yNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUHhgEyNDUyNDUyNDUyNDUyNDUyNDU
        yNDUyNDUyNDUyNDUyNDUTuXnAOrqA/r9LP//AP//AP//T1NRo3p7yNDUyNDUyNDUyNDUyNDUyNDUyNDU
        yNDUyNDUyNDUyNDUyNDUHhgEyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUxNHVAPPzAPf4
        AP//AP//IsnJqIaIyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUHhgEyNDUyNDU
        yNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUq9fZDv39B///N/Lzw8nNyNDUyNDUyNDUyNDUyNDU
        yNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUHhgEyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDU
        yNDUyNDUyNDUvtLWjt/iyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDUyNDU
        yNDUHhgE
</value>
  </data>
</root>