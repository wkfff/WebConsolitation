//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.8745
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bus.gov.ru.external.Item1
{
    using System.Collections.Generic;
    using System.IO;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Linq;
    using Xml.Schema.Linq;

    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class actionGrant : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator actionGrant(XElement xe) { return XTypedServices.ToXTypedElement<actionGrant>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static actionGrant() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public actionGrant() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("actionGrant", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static actionGrant Load(string xmlFile) {
            return XTypedServices.Load<actionGrant>(xmlFile);
        }
        
        public static actionGrant Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<actionGrant>(xmlFile);
        }
        
        public static actionGrant Parse(string xml) {
            return XTypedServices.Parse<actionGrant>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<actionGrant>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.actionGrantType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.actionGrantType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.actionGrantType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class activityResult : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator activityResult(XElement xe) { return XTypedServices.ToXTypedElement<activityResult>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static activityResult() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public activityResult() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("activityResult", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static activityResult Load(string xmlFile) {
            return XTypedServices.Load<activityResult>(xmlFile);
        }
        
        public static activityResult Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<activityResult>(xmlFile);
        }
        
        public static activityResult Parse(string xml) {
            return XTypedServices.Parse<activityResult>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<activityResult>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.activityResultType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.activityResultType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.activityResultType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503121_2013 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503121_2013(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503121_2013>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503121_2013() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503121_2013() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503121_2013", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503121_2013 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503121_2013>(xmlFile);
        }
        
        public static annualBalanceF0503121_2013 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503121_2013>(xmlFile);
        }
        
        public static annualBalanceF0503121_2013 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503121_2013>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503121_2013>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503121Type_2013 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503121Type_2013)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503121Type_2013));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503121_2014 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503121_2014(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503121_2014>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503121_2014() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503121_2014() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503121_2014", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503121_2014 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503121_2014>(xmlFile);
        }
        
        public static annualBalanceF0503121_2014 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503121_2014>(xmlFile);
        }
        
        public static annualBalanceF0503121_2014 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503121_2014>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503121_2014>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503121Type_2014 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503121Type_2014)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503121Type_2014));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503121 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503121(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503121>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503121() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503121() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503121", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503121 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503121>(xmlFile);
        }
        
        public static annualBalanceF0503121 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503121>(xmlFile);
        }
        
        public static annualBalanceF0503121 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503121>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503121>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503121Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503121Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503121Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503127 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503127(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503127>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503127() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503127() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503127", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503127 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503127>(xmlFile);
        }
        
        public static annualBalanceF0503127 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503127>(xmlFile);
        }
        
        public static annualBalanceF0503127 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503127>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503127>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503127Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503127Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503127Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503127_2015 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503127_2015(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503127_2015>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503127_2015() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503127_2015() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503127_2015", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503127_2015 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503127_2015>(xmlFile);
        }
        
        public static annualBalanceF0503127_2015 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503127_2015>(xmlFile);
        }
        
        public static annualBalanceF0503127_2015 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503127_2015>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503127_2015>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503127Type_2015 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503127Type_2015)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503127Type_2015));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503130_2013 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503130_2013(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503130_2013>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503130_2013() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503130_2013() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503130_2013", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503130_2013 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130_2013>(xmlFile);
        }
        
        public static annualBalanceF0503130_2013 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130_2013>(xmlFile);
        }
        
        public static annualBalanceF0503130_2013 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503130_2013>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503130_2013>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503130Type_2013 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503130Type_2013)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503130Type_2013));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503130_2014 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503130_2014(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503130_2014>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503130_2014() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503130_2014() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503130_2014", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503130_2014 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130_2014>(xmlFile);
        }
        
        public static annualBalanceF0503130_2014 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130_2014>(xmlFile);
        }
        
        public static annualBalanceF0503130_2014 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503130_2014>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503130_2014>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503130Type_2014 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503130Type_2014)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503130Type_2014));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503130_2015 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503130_2015(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503130_2015>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503130_2015() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503130_2015() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503130_2015", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503130_2015 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130_2015>(xmlFile);
        }
        
        public static annualBalanceF0503130_2015 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130_2015>(xmlFile);
        }
        
        public static annualBalanceF0503130_2015 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503130_2015>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503130_2015>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503130Type_2015 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503130Type_2015)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503130Type_2015));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503130 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503130(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503130>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503130() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503130() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503130", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503130 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130>(xmlFile);
        }
        
        public static annualBalanceF0503130 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503130>(xmlFile);
        }
        
        public static annualBalanceF0503130 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503130>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503130>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503130Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503130Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503130Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503137 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503137(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503137>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503137() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503137() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503137", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503137 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503137>(xmlFile);
        }
        
        public static annualBalanceF0503137 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503137>(xmlFile);
        }
        
        public static annualBalanceF0503137 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503137>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503137>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503137Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503137Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503137Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503721 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503721(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503721>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503721() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503721() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503721", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503721 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503721>(xmlFile);
        }
        
        public static annualBalanceF0503721 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503721>(xmlFile);
        }
        
        public static annualBalanceF0503721 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503721>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503721>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503721Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503721Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503721Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503721_2014 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503721_2014(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503721_2014>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503721_2014() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503721_2014() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503721_2014", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503721_2014 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503721_2014>(xmlFile);
        }
        
        public static annualBalanceF0503721_2014 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503721_2014>(xmlFile);
        }
        
        public static annualBalanceF0503721_2014 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503721_2014>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503721_2014>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503721Type_2014 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503721Type_2014)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503721Type_2014));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503721_2015 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503721_2015(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503721_2015>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503721_2015() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503721_2015() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503721_2015", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503721_2015 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503721_2015>(xmlFile);
        }
        
        public static annualBalanceF0503721_2015 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503721_2015>(xmlFile);
        }
        
        public static annualBalanceF0503721_2015 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503721_2015>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503721_2015>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503721Type_2015 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503721Type_2015)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503721Type_2015));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503730 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503730(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503730>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503730() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503730() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503730", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503730 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503730>(xmlFile);
        }
        
        public static annualBalanceF0503730 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503730>(xmlFile);
        }
        
        public static annualBalanceF0503730 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503730>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503730>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503730Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503730Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503730Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503730_2014 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503730_2014(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503730_2014>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503730_2014() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503730_2014() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503730_2014", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503730_2014 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503730_2014>(xmlFile);
        }
        
        public static annualBalanceF0503730_2014 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503730_2014>(xmlFile);
        }
        
        public static annualBalanceF0503730_2014 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503730_2014>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503730_2014>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503730Type_2014 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503730Type_2014)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503730Type_2014));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503730_2015 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503730_2015(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503730_2015>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503730_2015() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503730_2015() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503730_2015", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503730_2015 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503730_2015>(xmlFile);
        }
        
        public static annualBalanceF0503730_2015 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503730_2015>(xmlFile);
        }
        
        public static annualBalanceF0503730_2015 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503730_2015>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503730_2015>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503730Type_2015 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503730Type_2015)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503730Type_2015));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503737 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503737(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503737>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503737() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503737() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503737", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503737 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503737>(xmlFile);
        }
        
        public static annualBalanceF0503737 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503737>(xmlFile);
        }
        
        public static annualBalanceF0503737 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503737>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503737>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503737Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503737Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503737Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class annualBalanceF0503737_2015 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator annualBalanceF0503737_2015(XElement xe) { return XTypedServices.ToXTypedElement<annualBalanceF0503737_2015>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static annualBalanceF0503737_2015() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public annualBalanceF0503737_2015() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("annualBalanceF0503737_2015", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static annualBalanceF0503737_2015 Load(string xmlFile) {
            return XTypedServices.Load<annualBalanceF0503737_2015>(xmlFile);
        }
        
        public static annualBalanceF0503737_2015 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<annualBalanceF0503737_2015>(xmlFile);
        }
        
        public static annualBalanceF0503737_2015 Parse(string xml) {
            return XTypedServices.Parse<annualBalanceF0503737_2015>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<annualBalanceF0503737_2015>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.annualBalanceF0503737Type_2015 position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.annualBalanceF0503737Type_2015)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.annualBalanceF0503737Type_2015));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class budgetaryCircumstances : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator budgetaryCircumstances(XElement xe) { return XTypedServices.ToXTypedElement<budgetaryCircumstances>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static budgetaryCircumstances() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public budgetaryCircumstances() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("budgetaryCircumstances", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static budgetaryCircumstances Load(string xmlFile) {
            return XTypedServices.Load<budgetaryCircumstances>(xmlFile);
        }
        
        public static budgetaryCircumstances Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<budgetaryCircumstances>(xmlFile);
        }
        
        public static budgetaryCircumstances Parse(string xml) {
            return XTypedServices.Parse<budgetaryCircumstances>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<budgetaryCircumstances>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.budgetaryCircumstancesType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.budgetaryCircumstancesType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.budgetaryCircumstancesType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class confirmation : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator confirmation(XElement xe) { return XTypedServices.ToXTypedElement<confirmation>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static confirmation() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public confirmation() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.packetResultType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bus.gov.ru.types.Item1.packetResultType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("confirmation", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static confirmation Load(string xmlFile) {
            return XTypedServices.Load<confirmation>(xmlFile);
        }
        
        public static confirmation Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<confirmation>(xmlFile);
        }
        
        public static confirmation Parse(string xml) {
            return XTypedServices.Parse<confirmation>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<confirmation>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.packetResultType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class financialActivityPlan : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator financialActivityPlan(XElement xe) { return XTypedServices.ToXTypedElement<financialActivityPlan>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static financialActivityPlan() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public financialActivityPlan() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("financialActivityPlan", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static financialActivityPlan Load(string xmlFile) {
            return XTypedServices.Load<financialActivityPlan>(xmlFile);
        }
        
        public static financialActivityPlan Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<financialActivityPlan>(xmlFile);
        }
        
        public static financialActivityPlan Parse(string xml) {
            return XTypedServices.Parse<financialActivityPlan>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<financialActivityPlan>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.financialActivityPlanType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.financialActivityPlanType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.financialActivityPlanType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class financialActivityPlan2017 : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator financialActivityPlan2017(XElement xe) { return XTypedServices.ToXTypedElement<financialActivityPlan2017>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static financialActivityPlan2017() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public financialActivityPlan2017() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("financialActivityPlan2017", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static financialActivityPlan2017 Load(string xmlFile) {
            return XTypedServices.Load<financialActivityPlan2017>(xmlFile);
        }
        
        public static financialActivityPlan2017 Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<financialActivityPlan2017>(xmlFile);
        }
        
        public static financialActivityPlan2017 Parse(string xml) {
            return XTypedServices.Parse<financialActivityPlan2017>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<financialActivityPlan2017>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.financialActivityPlan2017Type position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.financialActivityPlan2017Type)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.financialActivityPlan2017Type));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class inspectionActivity : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator inspectionActivity(XElement xe) { return XTypedServices.ToXTypedElement<inspectionActivity>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static inspectionActivity() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public inspectionActivity() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("inspectionActivity", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static inspectionActivity Load(string xmlFile) {
            return XTypedServices.Load<inspectionActivity>(xmlFile);
        }
        
        public static inspectionActivity Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<inspectionActivity>(xmlFile);
        }
        
        public static inspectionActivity Parse(string xml) {
            return XTypedServices.Parse<inspectionActivity>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<inspectionActivity>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.inspectionActivityType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.inspectionActivityType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.inspectionActivityType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class institutionInfo : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator institutionInfo(XElement xe) { return XTypedServices.ToXTypedElement<institutionInfo>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static institutionInfo() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public institutionInfo() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("institutionInfo", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static institutionInfo Load(string xmlFile) {
            return XTypedServices.Load<institutionInfo>(xmlFile);
        }
        
        public static institutionInfo Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<institutionInfo>(xmlFile);
        }
        
        public static institutionInfo Parse(string xml) {
            return XTypedServices.Parse<institutionInfo>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<institutionInfo>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.institutionInfoType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.institutionInfoType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.institutionInfoType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class diverseInfo : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator diverseInfo(XElement xe) { return XTypedServices.ToXTypedElement<diverseInfo>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static diverseInfo() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public diverseInfo() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("diverseInfo", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static diverseInfo Load(string xmlFile) {
            return XTypedServices.Load<diverseInfo>(xmlFile);
        }
        
        public static diverseInfo Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<diverseInfo>(xmlFile);
        }
        
        public static diverseInfo Parse(string xml) {
            return XTypedServices.Parse<diverseInfo>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<diverseInfo>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.diverseInfoType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.diverseInfoType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.diverseInfoType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiBudget : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiBudget(XElement xe) { return XTypedServices.ToXTypedElement<nsiBudget>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiBudget() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiBudget() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiBudget", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiBudget Load(string xmlFile) {
            return XTypedServices.Load<nsiBudget>(xmlFile);
        }
        
        public static nsiBudget Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiBudget>(xmlFile);
        }
        
        public static nsiBudget Parse(string xml) {
            return XTypedServices.Parse<nsiBudget>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiBudget>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiBudgetType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiBudgetType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiBudgetType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiBudgetType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiBudgetType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiBudgetType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiDepartments : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiDepartments(XElement xe) { return XTypedServices.ToXTypedElement<nsiDepartments>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiDepartments() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiDepartments() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiDepartments", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiDepartments Load(string xmlFile) {
            return XTypedServices.Load<nsiDepartments>(xmlFile);
        }
        
        public static nsiDepartments Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiDepartments>(xmlFile);
        }
        
        public static nsiDepartments Parse(string xml) {
            return XTypedServices.Parse<nsiDepartments>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiDepartments>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiDepartments> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiDepartments> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiDepartments>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiDepartments>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiDepartments>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiDepartments));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiFederalService : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiFederalService(XElement xe) { return XTypedServices.ToXTypedElement<nsiFederalService>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiFederalService() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiFederalService() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiFederalService", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiFederalService Load(string xmlFile) {
            return XTypedServices.Load<nsiFederalService>(xmlFile);
        }
        
        public static nsiFederalService Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiFederalService>(xmlFile);
        }
        
        public static nsiFederalService Parse(string xml) {
            return XTypedServices.Parse<nsiFederalService>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiFederalService>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiFederalServiceType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiFederalServiceType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiFederalServiceType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiFederalServiceType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiFederalServiceType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiFederalServiceType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiInstitutionType : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiInstitutionType(XElement xe) { return XTypedServices.ToXTypedElement<nsiInstitutionType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiInstitutionType() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiInstitutionType() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiInstitutionType", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiInstitutionType Load(string xmlFile) {
            return XTypedServices.Load<nsiInstitutionType>(xmlFile);
        }
        
        public static nsiInstitutionType Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiInstitutionType>(xmlFile);
        }
        
        public static nsiInstitutionType Parse(string xml) {
            return XTypedServices.Parse<nsiInstitutionType>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiInstitutionType>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiInstitutionTypeType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiInstitutionTypeType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiInstitutionTypeType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiInstitutionTypeType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiInstitutionTypeType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiInstitutionTypeType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiKbkBudget : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiKbkBudget(XElement xe) { return XTypedServices.ToXTypedElement<nsiKbkBudget>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiKbkBudget() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiKbkBudget() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiKbkBudget", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiKbkBudget Load(string xmlFile) {
            return XTypedServices.Load<nsiKbkBudget>(xmlFile);
        }
        
        public static nsiKbkBudget Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiKbkBudget>(xmlFile);
        }
        
        public static nsiKbkBudget Parse(string xml) {
            return XTypedServices.Parse<nsiKbkBudget>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiKbkBudget>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiKbkBudgetType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiKbkBudgetType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiKbkBudgetType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiKbkBudgetType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiKbkBudgetType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiKbkBudgetType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiKladr : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiKladr(XElement xe) { return XTypedServices.ToXTypedElement<nsiKladr>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiKladr() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiKladr() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiKladr", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiKladr Load(string xmlFile) {
            return XTypedServices.Load<nsiKladr>(xmlFile);
        }
        
        public static nsiKladr Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiKladr>(xmlFile);
        }
        
        public static nsiKladr Parse(string xml) {
            return XTypedServices.Parse<nsiKladr>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiKladr>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiKladrType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiKladrType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiKladrType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiKladrType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiKladrType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiKladrType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiKosgu : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiKosgu(XElement xe) { return XTypedServices.ToXTypedElement<nsiKosgu>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiKosgu() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiKosgu() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiKosgu", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiKosgu Load(string xmlFile) {
            return XTypedServices.Load<nsiKosgu>(xmlFile);
        }
        
        public static nsiKosgu Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiKosgu>(xmlFile);
        }
        
        public static nsiKosgu Parse(string xml) {
            return XTypedServices.Parse<nsiKosgu>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiKosgu>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiKosguType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiKosguType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiKosguType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiKosguType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiKosguType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiKosguType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOgs : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static string versionFixedValue = "1.7.8";
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOgs(XElement xe) { return XTypedServices.ToXTypedElement<nsiOgs>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOgs() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOgs() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string version {
            get {
                return versionFixedValue;
            }
            set {
                if (value.Equals(versionFixedValue)) {
                }
                else {
                    throw new Xml.Schema.Linq.LinqToXsdFixedValueException(value, versionFixedValue);
                }
                this.SetAttribute(XName.Get("version", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOgs", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOgs Load(string xmlFile) {
            return XTypedServices.Load<nsiOgs>(xmlFile);
        }
        
        public static nsiOgs Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOgs>(xmlFile);
        }
        
        public static nsiOgs Parse(string xml) {
            return XTypedServices.Parse<nsiOgs>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOgs>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOgsType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOgsType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOgsType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOgsType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOgsType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOgsType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOkato : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOkato(XElement xe) { return XTypedServices.ToXTypedElement<nsiOkato>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOkato() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOkato() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOkato", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOkato Load(string xmlFile) {
            return XTypedServices.Load<nsiOkato>(xmlFile);
        }
        
        public static nsiOkato Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOkato>(xmlFile);
        }
        
        public static nsiOkato Parse(string xml) {
            return XTypedServices.Parse<nsiOkato>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOkato>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOkatoType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOkatoType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOkatoType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOkatoType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOkatoType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOkatoType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOkei : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOkei(XElement xe) { return XTypedServices.ToXTypedElement<nsiOkei>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOkei() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOkei() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOkei", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOkei Load(string xmlFile) {
            return XTypedServices.Load<nsiOkei>(xmlFile);
        }
        
        public static nsiOkei Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOkei>(xmlFile);
        }
        
        public static nsiOkei Parse(string xml) {
            return XTypedServices.Parse<nsiOkei>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOkei>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOkeiType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOkeiType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOkeiType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOkeiType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOkeiType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOkeiType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOker : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOker(XElement xe) { return XTypedServices.ToXTypedElement<nsiOker>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOker() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOker() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOker", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOker Load(string xmlFile) {
            return XTypedServices.Load<nsiOker>(xmlFile);
        }
        
        public static nsiOker Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOker>(xmlFile);
        }
        
        public static nsiOker Parse(string xml) {
            return XTypedServices.Parse<nsiOker>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOker>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOkerType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOkerType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOkerType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOkerType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOkerType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOkerType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOkfs : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOkfs(XElement xe) { return XTypedServices.ToXTypedElement<nsiOkfs>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOkfs() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOkfs() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOkfs", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOkfs Load(string xmlFile) {
            return XTypedServices.Load<nsiOkfs>(xmlFile);
        }
        
        public static nsiOkfs Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOkfs>(xmlFile);
        }
        
        public static nsiOkfs Parse(string xml) {
            return XTypedServices.Parse<nsiOkfs>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOkfs>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOkfsType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOkfsType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOkfsType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOkfsType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOkfsType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOkfsType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOkogu : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOkogu(XElement xe) { return XTypedServices.ToXTypedElement<nsiOkogu>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOkogu() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOkogu() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOkogu", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOkogu Load(string xmlFile) {
            return XTypedServices.Load<nsiOkogu>(xmlFile);
        }
        
        public static nsiOkogu Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOkogu>(xmlFile);
        }
        
        public static nsiOkogu Parse(string xml) {
            return XTypedServices.Parse<nsiOkogu>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOkogu>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOkoguType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOkoguType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOkoguType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOkoguType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOkoguType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOkoguType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOkopf : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOkopf(XElement xe) { return XTypedServices.ToXTypedElement<nsiOkopf>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOkopf() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOkopf() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOkopf", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOkopf Load(string xmlFile) {
            return XTypedServices.Load<nsiOkopf>(xmlFile);
        }
        
        public static nsiOkopf Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOkopf>(xmlFile);
        }
        
        public static nsiOkopf Parse(string xml) {
            return XTypedServices.Parse<nsiOkopf>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOkopf>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOkopfType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOkopfType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOkopfType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOkopfType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOkopfType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOkopfType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOktmo : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOktmo(XElement xe) { return XTypedServices.ToXTypedElement<nsiOktmo>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOktmo() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOktmo() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOktmo", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOktmo Load(string xmlFile) {
            return XTypedServices.Load<nsiOktmo>(xmlFile);
        }
        
        public static nsiOktmo Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOktmo>(xmlFile);
        }
        
        public static nsiOktmo Parse(string xml) {
            return XTypedServices.Parse<nsiOktmo>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOktmo>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOktmoType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOktmoType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOktmoType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOktmoType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOktmoType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOktmoType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiOkved : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiOkved(XElement xe) { return XTypedServices.ToXTypedElement<nsiOkved>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiOkved() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiOkved() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiOkved", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiOkved Load(string xmlFile) {
            return XTypedServices.Load<nsiOkved>(xmlFile);
        }
        
        public static nsiOkved Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiOkved>(xmlFile);
        }
        
        public static nsiOkved Parse(string xml) {
            return XTypedServices.Parse<nsiOkved>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiOkved>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiOkvedType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiOkvedType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiOkvedType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiOkvedType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiOkvedType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiOkvedType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiPpo : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiPpo(XElement xe) { return XTypedServices.ToXTypedElement<nsiPpo>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiPpo() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiPpo() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiPpo", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiPpo Load(string xmlFile) {
            return XTypedServices.Load<nsiPpo>(xmlFile);
        }
        
        public static nsiPpo Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiPpo>(xmlFile);
        }
        
        public static nsiPpo Parse(string xml) {
            return XTypedServices.Parse<nsiPpo>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiPpo>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiPpoType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiPpoType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiPpoType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiPpoType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiPpoType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiPpoType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiTOFK : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiTOFK(XElement xe) { return XTypedServices.ToXTypedElement<nsiTOFK>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiTOFK() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiTOFK() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiTOFK", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiTOFK Load(string xmlFile) {
            return XTypedServices.Load<nsiTOFK>(xmlFile);
        }
        
        public static nsiTOFK Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiTOFK>(xmlFile);
        }
        
        public static nsiTOFK Parse(string xml) {
            return XTypedServices.Parse<nsiTOFK>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiTOFK>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiTOFK> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiTOFK> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiTOFK>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiTOFK>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiTOFK>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiTOFK));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class stateTask : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator stateTask(XElement xe) { return XTypedServices.ToXTypedElement<stateTask>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static stateTask() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public stateTask() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("stateTask", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static stateTask Load(string xmlFile) {
            return XTypedServices.Load<stateTask>(xmlFile);
        }
        
        public static stateTask Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<stateTask>(xmlFile);
        }
        
        public static stateTask Parse(string xml) {
            return XTypedServices.Parse<stateTask>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<stateTask>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.stateTaskType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.stateTaskType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.stateTaskType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class stateTask640r : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator stateTask640r(XElement xe) { return XTypedServices.ToXTypedElement<stateTask640r>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static stateTask640r() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public stateTask640r() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("stateTask640r", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static stateTask640r Load(string xmlFile) {
            return XTypedServices.Load<stateTask640r>(xmlFile);
        }
        
        public static stateTask640r Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<stateTask640r>(xmlFile);
        }
        
        public static stateTask640r Parse(string xml) {
            return XTypedServices.Parse<stateTask640r>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<stateTask640r>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.stateTask640rType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.stateTask640rType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.stateTask640rType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class nsiSubjectService : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator nsiSubjectService(XElement xe) { return XTypedServices.ToXTypedElement<nsiSubjectService>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static nsiSubjectService() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public nsiSubjectService() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("nsiSubjectService", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static nsiSubjectService Load(string xmlFile) {
            return XTypedServices.Load<nsiSubjectService>(xmlFile);
        }
        
        public static nsiSubjectService Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<nsiSubjectService>(xmlFile);
        }
        
        public static nsiSubjectService Parse(string xml) {
            return XTypedServices.Parse<nsiSubjectService>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<nsiSubjectService>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position+)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private XTypedList<bus.gov.ru.types.Item1.nsiSubjectServiceType> positionField;
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required, repeating
            /// </para>
            /// <para>
            /// Regular expression: (position+)
            /// </para>
            /// </summary>
            public IList<bus.gov.ru.types.Item1.nsiSubjectServiceType> position {
                get {
                    if ((this.positionField == null)) {
                        this.positionField = new XTypedList<bus.gov.ru.types.Item1.nsiSubjectServiceType>(this, LinqToXsdTypeManager.Instance, XName.Get("position", "http://bus.gov.ru/external/1"));
                    }
                    return this.positionField;
                }
                set {
                    if ((value == null)) {
                        this.positionField = null;
                    }
                    else {
                        if ((this.positionField == null)) {
                            this.positionField = XTypedList<bus.gov.ru.types.Item1.nsiSubjectServiceType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("position", "http://bus.gov.ru/external/1"));
                        }
                        else {
                            XTypedServices.SetList<bus.gov.ru.types.Item1.nsiSubjectServiceType>(this.positionField, value);
                        }
                    }
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.nsiSubjectServiceType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class founderNet : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator founderNet(XElement xe) { return XTypedServices.ToXTypedElement<founderNet>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static founderNet() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public founderNet() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("founderNet", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static founderNet Load(string xmlFile) {
            return XTypedServices.Load<founderNet>(xmlFile);
        }
        
        public static founderNet Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<founderNet>(xmlFile);
        }
        
        public static founderNet Parse(string xml) {
            return XTypedServices.Parse<founderNet>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<founderNet>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.founderNetType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.founderNetType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.founderNetType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    /// <summary>
    /// <para>
    /// Regular expression: (header, body)
    /// </para>
    /// </summary>
    public partial class checkInfoReport : XTypedElement, IXMetaData {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;
        
         public static explicit operator checkInfoReport(XElement xe) { return XTypedServices.ToXTypedElement<checkInfoReport>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
        
        static checkInfoReport() {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("header", "http://bus.gov.ru/types/1")), new NamedContentModelEntity(XName.Get("body", "http://bus.gov.ru/external/1")));
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public checkInfoReport() {
        }
        
        /// <summary>
        /// <para>
        /// Заголовок информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bus.gov.ru.types.Item1.headerType header {
            get {
                XElement x = this.GetElement(XName.Get("header", "http://bus.gov.ru/types/1"));
                return ((bus.gov.ru.types.Item1.headerType)(x));
            }
            set {
                this.SetElement(XName.Get("header", "http://bus.gov.ru/types/1"), value);
            }
        }
        
        /// <summary>
        /// <para>
        /// Данные информационного пакета
        /// </para>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (header, body)
        /// </para>
        /// </summary>
        public bodyLocalType body {
            get {
                XElement x = this.GetElement(XName.Get("body", "http://bus.gov.ru/external/1"));
                return ((bodyLocalType)(x));
            }
            set {
                this.SetElement(XName.Get("body", "http://bus.gov.ru/external/1"), value);
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
            get {
                return localElementDictionary;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName {
            get {
                return XName.Get("checkInfoReport", "http://bus.gov.ru/external/1");
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin {
            get {
                return SchemaOrigin.Element;
            }
        }
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager {
            get {
                return LinqToXsdTypeManager.Instance;
            }
        }
        
        public void Save(string xmlFile) {
            XTypedServices.Save(xmlFile, Untyped);
        }
        
        public void Save(System.IO.TextWriter tw) {
            XTypedServices.Save(tw, Untyped);
        }
        
        public void Save(System.Xml.XmlWriter xmlWriter) {
            XTypedServices.Save(xmlWriter, Untyped);
        }
        
        public static checkInfoReport Load(string xmlFile) {
            return XTypedServices.Load<checkInfoReport>(xmlFile);
        }
        
        public static checkInfoReport Load(System.IO.TextReader xmlFile) {
            return XTypedServices.Load<checkInfoReport>(xmlFile);
        }
        
        public static checkInfoReport Parse(string xml) {
            return XTypedServices.Parse<checkInfoReport>(xml);
        }
        
        public override XTypedElement Clone() {
            return XTypedServices.CloneXTypedElement<checkInfoReport>(this);
        }
        
        private static void BuildElementDictionary() {
            localElementDictionary.Add(XName.Get("header", "http://bus.gov.ru/types/1"), typeof(bus.gov.ru.types.Item1.headerType));
            localElementDictionary.Add(XName.Get("body", "http://bus.gov.ru/external/1"), typeof(bodyLocalType));
        }
        
        ContentModelEntity IXMetaData.GetContentModel() {
            return contentModel;
        }
        
        /// <summary>
        /// <para>
        /// Regular expression: (position)
        /// </para>
        /// </summary>
        public partial class bodyLocalType : XTypedElement, IXMetaData {
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            private static ContentModelEntity contentModel;
            
         public static explicit operator bodyLocalType(XElement xe) { return XTypedServices.ToXTypedElement<bodyLocalType>(xe,LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }
            
            static bodyLocalType() {
                BuildElementDictionary();
                contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("position", "http://bus.gov.ru/external/1")));
            }
            
            /// <summary>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bodyLocalType() {
            }
            
            /// <summary>
            /// <para>
            /// Позиция в информационном пакете
            /// </para>
            /// <para>
            /// Occurrence: required
            /// </para>
            /// <para>
            /// Regular expression: (position)
            /// </para>
            /// </summary>
            public bus.gov.ru.types.Item1.checkInfoReportType position {
                get {
                    XElement x = this.GetElement(XName.Get("position", "http://bus.gov.ru/external/1"));
                    return ((bus.gov.ru.types.Item1.checkInfoReportType)(x));
                }
                set {
                    this.SetElement(XName.Get("position", "http://bus.gov.ru/external/1"), value);
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary {
                get {
                    return localElementDictionary;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            XName IXMetaData.SchemaName {
                get {
                    return XName.Get("body", "http://bus.gov.ru/external/1");
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            SchemaOrigin IXMetaData.TypeOrigin {
                get {
                    return SchemaOrigin.Fragment;
                }
            }
            
            [DebuggerBrowsable(DebuggerBrowsableState.Never)]
            ILinqToXsdTypeManager IXMetaData.TypeManager {
                get {
                    return LinqToXsdTypeManager.Instance;
                }
            }
            
            public override XTypedElement Clone() {
                return XTypedServices.CloneXTypedElement<bodyLocalType>(this);
            }
            
            private static void BuildElementDictionary() {
                localElementDictionary.Add(XName.Get("position", "http://bus.gov.ru/external/1"), typeof(bus.gov.ru.types.Item1.checkInfoReportType));
            }
            
            ContentModelEntity IXMetaData.GetContentModel() {
                return contentModel;
            }
        }
    }
    
    public class LinqToXsdTypeManager : ILinqToXsdTypeManager {
        
        static Dictionary<XName, System.Type> typeDictionary = new Dictionary<XName, System.Type>();
        
        static Dictionary<XName, System.Type> elementDictionary = new Dictionary<XName, System.Type>();
        
        private static XmlSchemaSet schemaSet;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static LinqToXsdTypeManager typeManagerSingleton = new LinqToXsdTypeManager();
        
        static LinqToXsdTypeManager() {
            BuildTypeDictionary();
            BuildElementDictionary();
        }
        
        XmlSchemaSet ILinqToXsdTypeManager.Schemas {
            get {
                if ((schemaSet == null)) {
                    XmlSchemaSet tempSet = new XmlSchemaSet();
                    System.Threading.Interlocked.CompareExchange(ref schemaSet, tempSet, null);
                }
                return schemaSet;
            }
            set {
                schemaSet = value;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalTypeDictionary {
            get {
                return typeDictionary;
            }
        }
        
        Dictionary<XName, System.Type> ILinqToXsdTypeManager.GlobalElementDictionary {
            get {
                return elementDictionary;
            }
        }
        
        Dictionary<System.Type, System.Type> ILinqToXsdTypeManager.RootContentTypeMapping {
            get {
                return XTypedServices.EmptyTypeMappingDictionary;
            }
        }
        
        public static LinqToXsdTypeManager Instance {
            get {
                return typeManagerSingleton;
            }
        }
        
        private static void BuildTypeDictionary() {
            typeDictionary.Add(XName.Get("actionGrantType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.actionGrantType));
            typeDictionary.Add(XName.Get("activityResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.activityResultType));
            typeDictionary.Add(XName.Get("addressSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.addressSoftType));
            typeDictionary.Add(XName.Get("addressStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.addressStrongType));
            typeDictionary.Add(XName.Get("annualBalanceF0503121Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503121Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503121Type_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503121Type_2013));
            typeDictionary.Add(XName.Get("annualBalanceF0503127Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503127Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503127Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503127Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type_2013));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503130Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503130Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503137Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503137Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503721Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503721Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503721Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503721Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503721Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503721Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503730Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503730Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503730Type_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503730Type_2014));
            typeDictionary.Add(XName.Get("annualBalanceF0503730Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503730Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceF0503737Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503737Type));
            typeDictionary.Add(XName.Get("annualBalanceF0503737Type_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503737Type_2015));
            typeDictionary.Add(XName.Get("annualBalanceBudgetGeneralDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceBudgetGeneralDataType));
            typeDictionary.Add(XName.Get("annualBalanceBudgetGeneralDataType2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceBudgetGeneralDataType2014));
            typeDictionary.Add(XName.Get("annualBalanceBudgetGeneralDataTypeCommon2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceBudgetGeneralDataTypeCommon2014));
            typeDictionary.Add(XName.Get("annualBalanceFounderDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderDataType));
            typeDictionary.Add(XName.Get("annualBalanceFounderDataType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderDataType_2015));
            typeDictionary.Add(XName.Get("annualBalanceFounderDataType_2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderDataType_2014));
            typeDictionary.Add(XName.Get("annualBalanceFounderFinSupportDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderFinSupportDataType));
            typeDictionary.Add(XName.Get("annualBalanceFounderFinSupportDataType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceFounderFinSupportDataType_2015));
            typeDictionary.Add(XName.Get("annualBalanceGeneralDataType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceGeneralDataType));
            typeDictionary.Add(XName.Get("annualBalanceGeneralDataType2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceGeneralDataType2014));
            typeDictionary.Add(XName.Get("annualBalanceGeneralDataTypeCommon2014", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceGeneralDataTypeCommon2014));
            typeDictionary.Add(XName.Get("branchChildType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchChildType));
            typeDictionary.Add(XName.Get("branchChildVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchChildVSRIType));
            typeDictionary.Add(XName.Get("branchParentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchParentType));
            typeDictionary.Add(XName.Get("branchParentVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.branchParentVSRIType));
            typeDictionary.Add(XName.Get("budgetaryCircumstancesType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.budgetaryCircumstancesType));
            typeDictionary.Add(XName.Get("changablePositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changablePositionType));
            typeDictionary.Add(XName.Get("changeIndexType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeIndexType));
            typeDictionary.Add(XName.Get("changeRangeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeRangeType));
            typeDictionary.Add(XName.Get("changeRequestClassifierType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeRequestClassifierType));
            typeDictionary.Add(XName.Get("changeRequestType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.changeRequestType));
            typeDictionary.Add(XName.Get("classifierType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.classifierType));
            typeDictionary.Add(XName.Get("consRegStatType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.consRegStatType));
            typeDictionary.Add(XName.Get("credentialsFkType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.credentialsFkType));
            typeDictionary.Add(XName.Get("credentialsGmuType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.credentialsGmuType));
            typeDictionary.Add(XName.Get("credentialsOosType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.credentialsOosType));
            typeDictionary.Add(XName.Get("diverseInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.diverseInfoType));
            typeDictionary.Add(XName.Get("documentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.documentType));
            typeDictionary.Add(XName.Get("paymentDetailsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.paymentDetailsType));
            typeDictionary.Add(XName.Get("paymentDetailsTargetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.paymentDetailsTargetType));
            typeDictionary.Add(XName.Get("egrulDifferenceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.egrulDifferenceType));
            typeDictionary.Add(XName.Get("employeeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.employeeType));
            typeDictionary.Add(XName.Get("fieldType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.fieldType));
            typeDictionary.Add(XName.Get("financialActivityPlanType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.financialActivityPlanType));
            typeDictionary.Add(XName.Get("financialActivityPlan2017Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.financialActivityPlan2017Type));
            typeDictionary.Add(XName.Get("founderAuthoritiesType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderAuthoritiesType));
            typeDictionary.Add(XName.Get("founderAuthoritiesVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderAuthoritiesVSRIType));
            typeDictionary.Add(XName.Get("fundsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.fundsType));
            typeDictionary.Add(XName.Get("headerType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.headerType));
            typeDictionary.Add(XName.Get("inspectionActivityType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.inspectionActivityType));
            typeDictionary.Add(XName.Get("institutionActivityType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionActivityType));
            typeDictionary.Add(XName.Get("institutionBudgetSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionBudgetSoftType));
            typeDictionary.Add(XName.Get("institutionBudgetStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionBudgetStrongType));
            typeDictionary.Add(XName.Get("institutionCashPaymentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionCashPaymentType));
            typeDictionary.Add(XName.Get("institutionClassifierType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionClassifierType));
            typeDictionary.Add(XName.Get("institutionEnactmentType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionEnactmentType));
            typeDictionary.Add(XName.Get("institutionEnactmentVSRIType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionEnactmentVSRIType));
            typeDictionary.Add(XName.Get("institutionInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionInfoType));
            typeDictionary.Add(XName.Get("institutionPositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.institutionPositionType));
            typeDictionary.Add(XName.Get("nsiBudgetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiBudgetType));
            typeDictionary.Add(XName.Get("nsiCustomerCategoryType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiCustomerCategoryType));
            typeDictionary.Add(XName.Get("nsiDepartments", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiDepartments));
            typeDictionary.Add(XName.Get("nsiFederalServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiFederalServiceType));
            typeDictionary.Add(XName.Get("nsiInstitutionTypeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiInstitutionTypeType));
            typeDictionary.Add(XName.Get("nsiKbkBudgetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiKbkBudgetType));
            typeDictionary.Add(XName.Get("nsiKladrType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiKladrType));
            typeDictionary.Add(XName.Get("nsiKosguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiKosguType));
            typeDictionary.Add(XName.Get("nsiOgsPositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOgsPositionType));
            typeDictionary.Add(XName.Get("nsiOgsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOgsType));
            typeDictionary.Add(XName.Get("nsiOkatoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkatoType));
            typeDictionary.Add(XName.Get("nsiOkeiType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkeiType));
            typeDictionary.Add(XName.Get("nsiOkerType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkerType));
            typeDictionary.Add(XName.Get("nsiOkfsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkfsType));
            typeDictionary.Add(XName.Get("nsiOkoguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkoguType));
            typeDictionary.Add(XName.Get("nsiOkopfType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkopfType));
            typeDictionary.Add(XName.Get("nsiOkpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkpoType));
            typeDictionary.Add(XName.Get("nsiOktmoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOktmoType));
            typeDictionary.Add(XName.Get("nsiOkvedType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiOkvedType));
            typeDictionary.Add(XName.Get("nsiPositionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiPositionType));
            typeDictionary.Add(XName.Get("nsiPpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiPpoType));
            typeDictionary.Add(XName.Get("nsiServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiServiceType));
            typeDictionary.Add(XName.Get("nsiSubjectServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiSubjectServiceType));
            typeDictionary.Add(XName.Get("nsiTOFK", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.nsiTOFK));
            typeDictionary.Add(XName.Get("packetResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.packetResultType));
            typeDictionary.Add(XName.Get("annualBalanceF0503121Type", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.annualBalanceF0503121Type));
            typeDictionary.Add(XName.Get("packetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.packetType));
            typeDictionary.Add(XName.Get("personType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.personType));
            typeDictionary.Add(XName.Get("positionResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.positionResultType));
            typeDictionary.Add(XName.Get("positionType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.positionType));
            typeDictionary.Add(XName.Get("ofcRegistrationInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.ofcRegistrationInfoType));
            typeDictionary.Add(XName.Get("ofcUserType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.ofcUserType));
            typeDictionary.Add(XName.Get("ofcOgsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.ofcOgsType));
            typeDictionary.Add(XName.Get("reportItemF0503121BaseType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121BaseType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503121BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503121TopLevelType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121TopLevelType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503121TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503121TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503127BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503127BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503127TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503127TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503130BaseType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130BaseType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503130BaseReferenceType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130BaseReferenceType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelReferenceType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelReferenceType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelReferenceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelReferenceType));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelType_2013", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelType_2013));
            typeDictionary.Add(XName.Get("reportItemF0503130TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503130TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503137BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503137BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503137TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503137TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503721BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503721BaseType2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721BaseType2015));
            typeDictionary.Add(XName.Get("reportItemF0503721TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503721TopLevelType2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503721TopLevelType2015));
            typeDictionary.Add(XName.Get("reportItemF0503730BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503730BaseType2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730BaseType2015));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelReferenceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelReferenceType));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelReferenceType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelReferenceType_2015));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503730TopLevelType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503730TopLevelType_2015));
            typeDictionary.Add(XName.Get("reportItemF0503737BaseType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737BaseType));
            typeDictionary.Add(XName.Get("reportItemF0503737BaseReturnExpenseType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737BaseReturnExpenseType_2015));
            typeDictionary.Add(XName.Get("reportItemF0503737TopLevelType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737TopLevelType));
            typeDictionary.Add(XName.Get("reportItemF0503737TopLevelReturnExpenseType_2015", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportItemF0503737TopLevelReturnExpenseType_2015));
            typeDictionary.Add(XName.Get("regPublishedInfoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.regPublishedInfoType));
            typeDictionary.Add(XName.Get("refNsiBudgetSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiBudgetSoftType));
            typeDictionary.Add(XName.Get("refNsiBudgetStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiBudgetStrongType));
            typeDictionary.Add(XName.Get("refNsiCustomerCategoryType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiCustomerCategoryType));
            typeDictionary.Add(XName.Get("refNsiInstitutionTypeType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiInstitutionTypeType));
            typeDictionary.Add(XName.Get("refNsiKbkBudgetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKbkBudgetType));
            typeDictionary.Add(XName.Get("refNsiKbkType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKbkType));
            typeDictionary.Add(XName.Get("refNsiKladrSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKladrSoftType));
            typeDictionary.Add(XName.Get("refNsiKladrStreetSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKladrStreetSoftType));
            typeDictionary.Add(XName.Get("refNsiKladrStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKladrStrongType));
            typeDictionary.Add(XName.Get("refNsiKosguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiKosguType));
            typeDictionary.Add(XName.Get("refNsiOgsExtendedSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsExtendedSoftType));
            typeDictionary.Add(XName.Get("refNsiConsRegExtendedSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegExtendedSoftType));
            typeDictionary.Add(XName.Get("refNsiOgsExtendedStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsExtendedStrongType));
            typeDictionary.Add(XName.Get("refNsiConsRegExtendedStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegExtendedStrongType));
            typeDictionary.Add(XName.Get("refNsiOgsSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsSoftType));
            typeDictionary.Add(XName.Get("refNsiOgsSoftType1", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsSoftType1));
            typeDictionary.Add(XName.Get("refNsiConsRegSoftType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegSoftType));
            typeDictionary.Add(XName.Get("refNsiOgsStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOgsStrongType));
            typeDictionary.Add(XName.Get("refNsiConsRegStrongType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiConsRegStrongType));
            typeDictionary.Add(XName.Get("refNsiOkatoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkatoType));
            typeDictionary.Add(XName.Get("refNsiOkeiType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkeiType));
            typeDictionary.Add(XName.Get("refNsiOkfsType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkfsType));
            typeDictionary.Add(XName.Get("refNsiOkoguType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkoguType));
            typeDictionary.Add(XName.Get("refNsiOkopfType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkopfType));
            typeDictionary.Add(XName.Get("refNsiOkpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkpoType));
            typeDictionary.Add(XName.Get("refNsiOktmoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOktmoType));
            typeDictionary.Add(XName.Get("refNsiOkvedType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiOkvedType));
            typeDictionary.Add(XName.Get("refNsiPpoType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiPpoType));
            typeDictionary.Add(XName.Get("refNsiServiceType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiServiceType));
            typeDictionary.Add(XName.Get("refNsiService640rType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiService640rType));
            typeDictionary.Add(XName.Get("refNsiTofkType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.refNsiTofkType));
            typeDictionary.Add(XName.Get("requisiteType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.requisiteType));
            typeDictionary.Add(XName.Get("serviceIndexType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.serviceIndexType));
            typeDictionary.Add(XName.Get("serviceIndex640rType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.serviceIndex640rType));
            typeDictionary.Add(XName.Get("stateTaskType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.stateTaskType));
            typeDictionary.Add(XName.Get("stateTask640rType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.stateTask640rType));
            typeDictionary.Add(XName.Get("orgListType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.orgListType));
            typeDictionary.Add(XName.Get("versionedPacketType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.versionedPacketType));
            typeDictionary.Add(XName.Get("versionedPacketType_ogs", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.versionedPacketType_ogs));
            typeDictionary.Add(XName.Get("violationType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.violationType));
            typeDictionary.Add(XName.Get("founderLinkTypeItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderLinkTypeItem));
            typeDictionary.Add(XName.Get("founderNetType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderNetType));
            typeDictionary.Add(XName.Get("founderNetPrivilegePeriodType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.founderNetPrivilegePeriodType));
            typeDictionary.Add(XName.Get("checkInfoReportType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.checkInfoReportType));
            typeDictionary.Add(XName.Get("checkedOrgItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.checkedOrgItem));
            typeDictionary.Add(XName.Get("infoByPeriodsCheckResultType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.infoByPeriodsCheckResultType));
            typeDictionary.Add(XName.Get("PPO_OGSType", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.PPO_OGSType));
            typeDictionary.Add(XName.Get("planPaymentIndexItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.planPaymentIndexItem));
            typeDictionary.Add(XName.Get("expensePaymentIndexItem", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.expensePaymentIndexItem));
            typeDictionary.Add(XName.Get("expenseSum", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.expenseSum));
            typeDictionary.Add(XName.Get("indexSum", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.indexSum));
        }
        
        private static void BuildElementDictionary() {
            elementDictionary.Add(XName.Get("actionGrant", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.actionGrant));
            elementDictionary.Add(XName.Get("activityResult", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.activityResult));
            elementDictionary.Add(XName.Get("annualBalanceF0503121_2013", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503121_2013));
            elementDictionary.Add(XName.Get("annualBalanceF0503121_2014", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503121_2014));
            elementDictionary.Add(XName.Get("annualBalanceF0503121", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503121));
            elementDictionary.Add(XName.Get("annualBalanceF0503127", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503127));
            elementDictionary.Add(XName.Get("annualBalanceF0503127_2015", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503127_2015));
            elementDictionary.Add(XName.Get("annualBalanceF0503130_2013", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503130_2013));
            elementDictionary.Add(XName.Get("annualBalanceF0503130_2014", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503130_2014));
            elementDictionary.Add(XName.Get("annualBalanceF0503130_2015", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503130_2015));
            elementDictionary.Add(XName.Get("annualBalanceF0503130", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503130));
            elementDictionary.Add(XName.Get("annualBalanceF0503137", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503137));
            elementDictionary.Add(XName.Get("annualBalanceF0503721", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503721));
            elementDictionary.Add(XName.Get("annualBalanceF0503721_2014", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503721_2014));
            elementDictionary.Add(XName.Get("annualBalanceF0503721_2015", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503721_2015));
            elementDictionary.Add(XName.Get("annualBalanceF0503730", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503730));
            elementDictionary.Add(XName.Get("annualBalanceF0503730_2014", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503730_2014));
            elementDictionary.Add(XName.Get("annualBalanceF0503730_2015", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503730_2015));
            elementDictionary.Add(XName.Get("annualBalanceF0503737", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503737));
            elementDictionary.Add(XName.Get("annualBalanceF0503737_2015", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.annualBalanceF0503737_2015));
            elementDictionary.Add(XName.Get("budgetaryCircumstances", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.budgetaryCircumstances));
            elementDictionary.Add(XName.Get("confirmation", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.confirmation));
            elementDictionary.Add(XName.Get("financialActivityPlan", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.financialActivityPlan));
            elementDictionary.Add(XName.Get("financialActivityPlan2017", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.financialActivityPlan2017));
            elementDictionary.Add(XName.Get("inspectionActivity", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.inspectionActivity));
            elementDictionary.Add(XName.Get("institutionInfo", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.institutionInfo));
            elementDictionary.Add(XName.Get("diverseInfo", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.diverseInfo));
            elementDictionary.Add(XName.Get("nsiBudget", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiBudget));
            elementDictionary.Add(XName.Get("nsiDepartments", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiDepartments));
            elementDictionary.Add(XName.Get("nsiFederalService", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiFederalService));
            elementDictionary.Add(XName.Get("nsiInstitutionType", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiInstitutionType));
            elementDictionary.Add(XName.Get("nsiKbkBudget", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiKbkBudget));
            elementDictionary.Add(XName.Get("nsiKladr", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiKladr));
            elementDictionary.Add(XName.Get("nsiKosgu", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiKosgu));
            elementDictionary.Add(XName.Get("nsiOgs", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOgs));
            elementDictionary.Add(XName.Get("nsiOkato", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOkato));
            elementDictionary.Add(XName.Get("nsiOkei", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOkei));
            elementDictionary.Add(XName.Get("nsiOker", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOker));
            elementDictionary.Add(XName.Get("nsiOkfs", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOkfs));
            elementDictionary.Add(XName.Get("nsiOkogu", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOkogu));
            elementDictionary.Add(XName.Get("nsiOkopf", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOkopf));
            elementDictionary.Add(XName.Get("nsiOktmo", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOktmo));
            elementDictionary.Add(XName.Get("nsiOkved", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiOkved));
            elementDictionary.Add(XName.Get("nsiPpo", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiPpo));
            elementDictionary.Add(XName.Get("nsiTOFK", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiTOFK));
            elementDictionary.Add(XName.Get("stateTask", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.stateTask));
            elementDictionary.Add(XName.Get("stateTask640r", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.stateTask640r));
            elementDictionary.Add(XName.Get("nsiSubjectService", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.nsiSubjectService));
            elementDictionary.Add(XName.Get("founderNet", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.founderNet));
            elementDictionary.Add(XName.Get("checkInfoReport", "http://bus.gov.ru/external/1"), typeof(global::bus.gov.ru.external.Item1.checkInfoReport));
            elementDictionary.Add(XName.Get("reportGUID", "http://bus.gov.ru/types/1"), typeof(global::bus.gov.ru.types.Item1.reportGUID));
        }
        
        protected internal static void AddSchemas(XmlSchemaSet schemas) {
            schemas.Add(schemaSet);
        }
        
        public static System.Type GetRootType() {
            return elementDictionary[XName.Get("actionGrant", "http://bus.gov.ru/external/1")];
        }
    }
    
    public partial class XRootNamespace {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public actionGrant actionGrant {  get {return rootObject as actionGrant; } }

    public activityResult activityResult {  get {return rootObject as activityResult; } }

    public annualBalanceF0503121_2013 annualBalanceF0503121_2013 {  get {return rootObject as annualBalanceF0503121_2013; } }

    public annualBalanceF0503121_2014 annualBalanceF0503121_2014 {  get {return rootObject as annualBalanceF0503121_2014; } }

    public annualBalanceF0503121 annualBalanceF0503121 {  get {return rootObject as annualBalanceF0503121; } }

    public annualBalanceF0503127 annualBalanceF0503127 {  get {return rootObject as annualBalanceF0503127; } }

    public annualBalanceF0503127_2015 annualBalanceF0503127_2015 {  get {return rootObject as annualBalanceF0503127_2015; } }

    public annualBalanceF0503130_2013 annualBalanceF0503130_2013 {  get {return rootObject as annualBalanceF0503130_2013; } }

    public annualBalanceF0503130_2014 annualBalanceF0503130_2014 {  get {return rootObject as annualBalanceF0503130_2014; } }

    public annualBalanceF0503130_2015 annualBalanceF0503130_2015 {  get {return rootObject as annualBalanceF0503130_2015; } }

    public annualBalanceF0503130 annualBalanceF0503130 {  get {return rootObject as annualBalanceF0503130; } }

    public annualBalanceF0503137 annualBalanceF0503137 {  get {return rootObject as annualBalanceF0503137; } }

    public annualBalanceF0503721 annualBalanceF0503721 {  get {return rootObject as annualBalanceF0503721; } }

    public annualBalanceF0503721_2014 annualBalanceF0503721_2014 {  get {return rootObject as annualBalanceF0503721_2014; } }

    public annualBalanceF0503721_2015 annualBalanceF0503721_2015 {  get {return rootObject as annualBalanceF0503721_2015; } }

    public annualBalanceF0503730 annualBalanceF0503730 {  get {return rootObject as annualBalanceF0503730; } }

    public annualBalanceF0503730_2014 annualBalanceF0503730_2014 {  get {return rootObject as annualBalanceF0503730_2014; } }

    public annualBalanceF0503730_2015 annualBalanceF0503730_2015 {  get {return rootObject as annualBalanceF0503730_2015; } }

    public annualBalanceF0503737 annualBalanceF0503737 {  get {return rootObject as annualBalanceF0503737; } }

    public annualBalanceF0503737_2015 annualBalanceF0503737_2015 {  get {return rootObject as annualBalanceF0503737_2015; } }

    public budgetaryCircumstances budgetaryCircumstances {  get {return rootObject as budgetaryCircumstances; } }

    public confirmation confirmation {  get {return rootObject as confirmation; } }

    public financialActivityPlan financialActivityPlan {  get {return rootObject as financialActivityPlan; } }

    public financialActivityPlan2017 financialActivityPlan2017 {  get {return rootObject as financialActivityPlan2017; } }

    public inspectionActivity inspectionActivity {  get {return rootObject as inspectionActivity; } }

    public institutionInfo institutionInfo {  get {return rootObject as institutionInfo; } }

    public diverseInfo diverseInfo {  get {return rootObject as diverseInfo; } }

    public nsiBudget nsiBudget {  get {return rootObject as nsiBudget; } }

    public nsiDepartments nsiDepartments {  get {return rootObject as nsiDepartments; } }

    public nsiFederalService nsiFederalService {  get {return rootObject as nsiFederalService; } }

    public nsiInstitutionType nsiInstitutionType {  get {return rootObject as nsiInstitutionType; } }

    public nsiKbkBudget nsiKbkBudget {  get {return rootObject as nsiKbkBudget; } }

    public nsiKladr nsiKladr {  get {return rootObject as nsiKladr; } }

    public nsiKosgu nsiKosgu {  get {return rootObject as nsiKosgu; } }

    public nsiOgs nsiOgs {  get {return rootObject as nsiOgs; } }

    public nsiOkato nsiOkato {  get {return rootObject as nsiOkato; } }

    public nsiOkei nsiOkei {  get {return rootObject as nsiOkei; } }

    public nsiOker nsiOker {  get {return rootObject as nsiOker; } }

    public nsiOkfs nsiOkfs {  get {return rootObject as nsiOkfs; } }

    public nsiOkogu nsiOkogu {  get {return rootObject as nsiOkogu; } }

    public nsiOkopf nsiOkopf {  get {return rootObject as nsiOkopf; } }

    public nsiOktmo nsiOktmo {  get {return rootObject as nsiOktmo; } }

    public nsiOkved nsiOkved {  get {return rootObject as nsiOkved; } }

    public nsiPpo nsiPpo {  get {return rootObject as nsiPpo; } }

    public nsiTOFK nsiTOFK {  get {return rootObject as nsiTOFK; } }

    public stateTask stateTask {  get {return rootObject as stateTask; } }

    public stateTask640r stateTask640r {  get {return rootObject as stateTask640r; } }

    public nsiSubjectService nsiSubjectService {  get {return rootObject as nsiSubjectService; } }

    public founderNet founderNet {  get {return rootObject as founderNet; } }

    public checkInfoReport checkInfoReport {  get {return rootObject as checkInfoReport; } }
        
        private XRootNamespace() {
        }
        
        public XRootNamespace(actionGrant root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(activityResult root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503121_2013 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503121_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503121 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503127 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503127_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503130_2013 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503130_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503130_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503130 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503137 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503721 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503721_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503721_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503730 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503730_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503730_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503737 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(annualBalanceF0503737_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(budgetaryCircumstances root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(confirmation root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(financialActivityPlan root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(financialActivityPlan2017 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(inspectionActivity root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(institutionInfo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(diverseInfo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiBudget root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiDepartments root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiFederalService root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiInstitutionType root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiKbkBudget root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiKladr root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiKosgu root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOgs root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOkato root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOkei root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOker root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOkfs root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOkogu root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOkopf root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOktmo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiOkved root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiPpo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiTOFK root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(stateTask root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(stateTask640r root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(nsiSubjectService root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(founderNet root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRootNamespace(checkInfoReport root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRootNamespace Load(string xmlFile) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(string xmlFile, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(TextReader textReader, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Load(XmlReader xmlReader) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRootNamespace Parse(string text, LoadOptions options) {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
    
    public partial class XRoot {
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;
        
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;
        

    public global::bus.gov.ru.external.Item1.actionGrant actionGrant {  get {return rootObject as global::bus.gov.ru.external.Item1.actionGrant; } }

    public global::bus.gov.ru.external.Item1.activityResult activityResult {  get {return rootObject as global::bus.gov.ru.external.Item1.activityResult; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503121_2013 annualBalanceF0503121_2013 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503121_2013; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503121_2014 annualBalanceF0503121_2014 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503121_2014; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503121 annualBalanceF0503121 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503121; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503127 annualBalanceF0503127 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503127; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503127_2015 annualBalanceF0503127_2015 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503127_2015; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503130_2013 annualBalanceF0503130_2013 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503130_2013; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503130_2014 annualBalanceF0503130_2014 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503130_2014; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503130_2015 annualBalanceF0503130_2015 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503130_2015; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503130 annualBalanceF0503130 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503130; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503137 annualBalanceF0503137 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503137; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503721 annualBalanceF0503721 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503721; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503721_2014 annualBalanceF0503721_2014 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503721_2014; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503721_2015 annualBalanceF0503721_2015 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503721_2015; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503730 annualBalanceF0503730 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503730; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503730_2014 annualBalanceF0503730_2014 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503730_2014; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503730_2015 annualBalanceF0503730_2015 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503730_2015; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503737 annualBalanceF0503737 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503737; } }

    public global::bus.gov.ru.external.Item1.annualBalanceF0503737_2015 annualBalanceF0503737_2015 {  get {return rootObject as global::bus.gov.ru.external.Item1.annualBalanceF0503737_2015; } }

    public global::bus.gov.ru.external.Item1.budgetaryCircumstances budgetaryCircumstances {  get {return rootObject as global::bus.gov.ru.external.Item1.budgetaryCircumstances; } }

    public global::bus.gov.ru.external.Item1.confirmation confirmation {  get {return rootObject as global::bus.gov.ru.external.Item1.confirmation; } }

    public global::bus.gov.ru.external.Item1.financialActivityPlan financialActivityPlan {  get {return rootObject as global::bus.gov.ru.external.Item1.financialActivityPlan; } }

    public global::bus.gov.ru.external.Item1.financialActivityPlan2017 financialActivityPlan2017 {  get {return rootObject as global::bus.gov.ru.external.Item1.financialActivityPlan2017; } }

    public global::bus.gov.ru.external.Item1.inspectionActivity inspectionActivity {  get {return rootObject as global::bus.gov.ru.external.Item1.inspectionActivity; } }

    public global::bus.gov.ru.external.Item1.institutionInfo institutionInfo {  get {return rootObject as global::bus.gov.ru.external.Item1.institutionInfo; } }

    public global::bus.gov.ru.external.Item1.diverseInfo diverseInfo {  get {return rootObject as global::bus.gov.ru.external.Item1.diverseInfo; } }

    public global::bus.gov.ru.external.Item1.nsiBudget nsiBudget {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiBudget; } }

    public global::bus.gov.ru.external.Item1.nsiDepartments nsiDepartments {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiDepartments; } }

    public global::bus.gov.ru.external.Item1.nsiFederalService nsiFederalService {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiFederalService; } }

    public global::bus.gov.ru.external.Item1.nsiInstitutionType nsiInstitutionType {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiInstitutionType; } }

    public global::bus.gov.ru.external.Item1.nsiKbkBudget nsiKbkBudget {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiKbkBudget; } }

    public global::bus.gov.ru.external.Item1.nsiKladr nsiKladr {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiKladr; } }

    public global::bus.gov.ru.external.Item1.nsiKosgu nsiKosgu {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiKosgu; } }

    public global::bus.gov.ru.external.Item1.nsiOgs nsiOgs {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOgs; } }

    public global::bus.gov.ru.external.Item1.nsiOkato nsiOkato {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOkato; } }

    public global::bus.gov.ru.external.Item1.nsiOkei nsiOkei {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOkei; } }

    public global::bus.gov.ru.external.Item1.nsiOker nsiOker {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOker; } }

    public global::bus.gov.ru.external.Item1.nsiOkfs nsiOkfs {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOkfs; } }

    public global::bus.gov.ru.external.Item1.nsiOkogu nsiOkogu {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOkogu; } }

    public global::bus.gov.ru.external.Item1.nsiOkopf nsiOkopf {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOkopf; } }

    public global::bus.gov.ru.external.Item1.nsiOktmo nsiOktmo {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOktmo; } }

    public global::bus.gov.ru.external.Item1.nsiOkved nsiOkved {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiOkved; } }

    public global::bus.gov.ru.external.Item1.nsiPpo nsiPpo {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiPpo; } }

    public global::bus.gov.ru.external.Item1.nsiTOFK nsiTOFK {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiTOFK; } }

    public global::bus.gov.ru.external.Item1.stateTask stateTask {  get {return rootObject as global::bus.gov.ru.external.Item1.stateTask; } }

    public global::bus.gov.ru.external.Item1.stateTask640r stateTask640r {  get {return rootObject as global::bus.gov.ru.external.Item1.stateTask640r; } }

    public global::bus.gov.ru.external.Item1.nsiSubjectService nsiSubjectService {  get {return rootObject as global::bus.gov.ru.external.Item1.nsiSubjectService; } }

    public global::bus.gov.ru.external.Item1.founderNet founderNet {  get {return rootObject as global::bus.gov.ru.external.Item1.founderNet; } }

    public global::bus.gov.ru.external.Item1.checkInfoReport checkInfoReport {  get {return rootObject as global::bus.gov.ru.external.Item1.checkInfoReport; } }

    public global::bus.gov.ru.types.Item1.reportGUID reportGUID {  get {return rootObject as global::bus.gov.ru.types.Item1.reportGUID; } }
        
        private XRoot() {
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.actionGrant root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.activityResult root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503121_2013 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503121_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503121 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503127 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503127_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503130_2013 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503130_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503130_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503130 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503137 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503721 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503721_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503721_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503730 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503730_2014 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503730_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503737 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.annualBalanceF0503737_2015 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.budgetaryCircumstances root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.confirmation root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.financialActivityPlan root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.financialActivityPlan2017 root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.inspectionActivity root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.institutionInfo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.diverseInfo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiBudget root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiDepartments root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiFederalService root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiInstitutionType root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiKbkBudget root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiKladr root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiKosgu root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOgs root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOkato root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOkei root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOker root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOkfs root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOkogu root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOkopf root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOktmo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiOkved root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiPpo root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiTOFK root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.stateTask root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.stateTask640r root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.nsiSubjectService root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.founderNet root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.external.Item1.checkInfoReport root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XRoot(global::bus.gov.ru.types.Item1.reportGUID root) {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }
        
        public XDocument XDocument {
            get {
                return doc;
            }
        }
        
        public static XRoot Load(string xmlFile) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(string xmlFile, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(TextReader textReader, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Load(XmlReader xmlReader) {
            XRoot root = new XRoot();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public static XRoot Parse(string text, LoadOptions options) {
            XRoot root = new XRoot();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null)) {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }
        
        public virtual void Save(string fileName) {
            doc.Save(fileName);
        }
        
        public virtual void Save(TextWriter textWriter) {
            doc.Save(textWriter);
        }
        
        public virtual void Save(XmlWriter writer) {
            doc.Save(writer);
        }
        
        public virtual void Save(TextWriter textWriter, SaveOptions options) {
            doc.Save(textWriter, options);
        }
        
        public virtual void Save(string fileName, SaveOptions options) {
            doc.Save(fileName, options);
        }
    }
}